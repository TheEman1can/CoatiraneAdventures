#:kivy 2.0.0
#: import Image kivy.core.image

#My Class Imports
#:import ImageBase src.modules.KivyBase.Hoverable.ImageBase
#:import ButtonBase src.modules.KivyBase.Hoverable.ButtonBase
#:import AsyncImageBase src.modules.KivyBase.Hoverable.AsyncImageBase
#:import LabelBase src.modules.KivyBase.Hoverable.LabelBase
#:import RelativeLayoutBase src.modules.KivyBase.Hoverable.RelativeLayoutBase
#:import GridLayoutBase src.modules.KivyBase.Hoverable.GridLayoutBase
#:import StencilViewBase src.modules.KivyBase.Hoverable.StencilViewBase
#:import ScrollViewBase src.modules.KivyBase.Hoverable.ScrollViewBase

#:import DisplayEquipmentSlot src.modules.Screens.Equipment.EquipmentSlot.DisplayEquipmentSlot
#:import DetailEquipmentSlot src.modules.Screens.Equipment.EquipmentSlot.DetailEquipmentSlot
#:import AbilityStatBox src.modules.Screens.CharacterAttributeScreens.AbilityStatBox.AbilityStatBox
#:import StatInfoBox src.modules.Screens.CharacterAttributeScreens.StatInfoBox.StatInfoBox
#:import StatBox src.modules.Screens.CharacterAttributeScreens.StatBox.StatBox
#:import StatusBoardManager src.modules.Screens.CharacterAttributeScreens.StatusBoard.StatusBoardManager
#:import AttackLabel src.modules.Screens.CharacterAttributeScreens.StatusLabel.AttackLabel
#:import ComboAttackLabel src.modules.Screens.CharacterAttributeScreens.StatusLabel.ComboAttackLabel
#:import SkillLabel src.modules.Screens.CharacterAttributeScreens.StatusLabel.SkillLabel
#:import SkillsList src.modules.Screens.CharacterAttributeScreens.SkillsList.SkillsList
#:import FilledCharacterPreview src.modules.Screens.CharacterDisplay.FilledCharacterPreview.FilledCharacterPreview
#:import SquareCharacterPreview src.modules.Screens.CharacterDisplay.SquareCharacterPreview.SquareCharacterPreview
#:import DragSnapWidget src.modules.DragScreen.DragSnapWidget
#:import PartyIndexer src.modules.PartyIndexer.PartyIndexer
#:import CircularProgressBar src.modules.CircularProgressBar.CircularProgressBar
#:import HeartIndicator src.modules.Screens.CharacterDisplay.HeartIndicator.HeartIndicator
#:import Hint src.modules.Screens.CharacterDisplay.hint.Hint
#:import HintNameWords src.modules.Screens.CharacterDisplay.hint.HintNameWords
#:import HintNameNumbers src.modules.Screens.CharacterDisplay.hint.HintNameNumbers

<CircularProgressBar>:
    normalised_value: self.normalized_min + (self.value - self.min) * (self.normalized_max - self.normalized_min) / (self.max - self.min)
    canvas:
        PushMatrix
        Rotate:
            angle: self.rot_angle
            origin: self.center
        Color:
            rgba: self.background_color
        Line:
            circle: self.x + self.width / 2, self.y + self.height / 2, self.width / 2 - self.thickness, root.draw_min, root.draw_max
            width: self.thickness
            cap: self.cap_style
            cap_precision: self.cap_precision
        Color:
            rgba: self.progress_color
        Line:
            circle: self.x + self.width / 2, self.y + self.height / 2, self.width / 2 - self.thickness, root.draw_min, root.draw_min + self.normalised_value * (root.draw_max - root.draw_min)
            width: self.thickness
            cap: self.cap_style
            cap_precision: self.cap_precision
        PopMatrix

<ScreenBase>:
    ImageBase:
        id: background
        source: root.background_source
        opacity: 0 if not root.background else 1
        allow_stretch: True

<NewGameScreen>:
    name: 'new_game'
    background_source: '../res/screens/backgrounds/newgamebackground.png'
    canvas:
        Rectangle:
            id: title
            size: app.get_dkey('ng.t s', self.width, self.height)
            pos: app.get_dkey('ng.t p', self.width, self.height)
            texture: self.title_texture
    HTButton:
        id: new_game
        size_hint: app.get_dkey('ng.ngb s_h')
        pos_hint: app.get_dkey('ng.ngb p_h')
        path: '../res/screens/buttons/newgame'
        on_release: root.on_new_game()
    HTButton:
        id: load_game
        size_hint: app.get_dkey('ng.lgb s_h')
        pos_hint: app.get_dkey('ng.lgb p_h')
        path: '../res/screens/buttons/loadgame'
        on_release: root.on_load_game()

<SelectScreen>:
    name: 'select_screen'
    LabelBase:
        id: title
        size_hint: (None, None)
        text: 'Select a Character!'
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('ss.t c')
        font_size: app.get_dkey('ss.t fs', root.width)
        pos_hint: app.get_dkey('ss.t p_h')
        outline_width: app.get_dkey('ss.t ow')
        outline_color: app.get_dkey('ss.t oc')
    HTButton:
        id: new_game_ais
        path: '../res/screens/buttons/newgame.ais'
        size_hint: app.get_dkey('ss.nga s_h')
        pos_hint: app.get_dkey('ss.nga p_h')
        on_release: root.choose_character('badass_ais')
    LabelBase:
        id: new_game_ais_label
        size_hint: (None, None)
        text: 'Battle Princess'
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('ss.ngal c')
        font_size: app.get_dkey('ss.ngal fs', root.width)
        pos_hint: app.get_dkey('ss.ngal p_h')
        outline_width: app.get_dkey('ss.ngal ow')
        outline_color: app.get_dkey('ss.ngal oc')
    HTButton:
        id: new_game_bell
        path: '../res/screens/buttons/newgame.bell'
        size_hint: app.get_dkey('ss.ngb s_h')
        pos_hint: app.get_dkey('ss.ngb p_h')
        on_release: root.choose_character('hero_bell')
    LabelBase:
        id: new_game_bell_label
        size_hint: (None, None)
        text: 'Rabbit Foot'
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('ss.ngbl c')
        font_size: app.get_dkey('ss.ngbl fs', root.width)
        pos_hint: app.get_dkey('ss.ngbl p_h')
        outline_width: app.get_dkey('ss.ngbl ow')
        outline_color: app.get_dkey('ss.ngbl oc')

<SmallTownButton@HTButton>:
    collide_image: '../res/screens/buttons/smallbutton.collision.png'
    font_name: '../res/fnt/Precious.ttf'

<TownScreen>:
    name: 'town_screen'
    background_source: '../res/screens/backgrounds/townClip.jpg'
    SmallTownButton:
        id: tavern
        text: "Tavern"
        path: '../res/screens/buttons/tavern_button'
        label_padding: app.get_dkey('ts.tb lp', root.width)
        pos_hint: app.get_dkey('ts.tb p_h', root.width, root.height)
        font_size: app.get_dkey('ts.sb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.sb s_h', root.width)
        on_release: root.on_tavern()
        canvas:
            Color:
                rgba: 1, 1, 1, root.tavern_lock_opacity
            Rectangle:
                id: tavern_lock
                size: self.size
                pos: self.pos
                texture: root.small_lock_texture
            Color:
                rgba: 1, 1, 1, 1
    SmallTownButton:
        id: shop
        text: "Shop"
        path: '../res/screens/buttons/shop_button'
        label_padding: app.get_dkey('ts.shb lp', root.width)
        pos_hint: app.get_dkey('ts.shb p_h', root.width, root.height)
        font_size: app.get_dkey('ts.sb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.sb s_h', root.width)
    SmallTownButton:
        id: crafting
        text: "Crafting"
        path: '../res/screens/buttons/crafting_button'
        label_padding: app.get_dkey('ts.cb lp', root.width)
        pos_hint: app.get_dkey('ts.cb p_h', root.width, root.height)
        font_size: app.get_dkey('ts.sb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.sb s_h', root.width)
        canvas:
            Color:
                rgba: 1, 1, 1, root.crafting_lock_opacity
            Rectangle:
                id: crafting_lock
                size: self.size
                pos: self.pos
                texture: root.small_lock_texture
            Color:
                rgba: 1, 1, 1, 1
    SmallTownButton:
        id: inventory
        text: "Inventory"
        path: '../res/screens/buttons/inventory_button'
        label_padding: app.get_dkey('ts.ib lp', root.width)
        pos_hint: app.get_dkey('ts.ib p_h', root.width, root.height)
        font_size: app.get_dkey('ts.sb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.sb s_h', root.width)
    SmallTownButton:
        id: quest
        text: "Quest"
        path: '../res/screens/buttons/quest_button'
        label_padding: app.get_dkey('ts.qb lp', root.width)
        pos_hint: app.get_dkey('ts.qb p_h', root.width, root.height)
        font_size: app.get_dkey('ts.sb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.sb s_h', root.width)
    HTButton:
        id: dungeon
        text: "Dungeon"
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        path: '../res/screens/buttons/dungeon_button'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('ts.lb fs', root.width)
        label_color: app.get_dkey('ts lc')
        size_hint: app.get_dkey('ts.lb s_h', root.width)
        label_padding: app.get_dkey('ts.db lp', root.width)
        pos_hint: app.get_dkey('ts.db p_h', root.width, root.height)
        on_release: root.on_dungeon()

<TavernMain>
    name: 'tavern_main'
    background_source: '../res/screens/backgrounds/collage.png'
    LabelBase:
        id: title
        size_hint: (None, None)
        markup: True
        text: '[b]Recruitment[/b]'
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('tas.t c')
        outline_width: app.get_dkey('tas.t ow')
        outline_color: app.get_dkey('tas.t oc')
        font_size: app.get_dkey('tas.t fs', root.width)
        pos_hint: app.get_dkey('tas.t p_h')
    HTButton:
        id: recruit_button
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        path: '../res/screens/buttons/recruit_button'
        font_name: '../res/fnt/Precious.ttf'
        text: 'Recruit'
        on_release: root.on_recruit()
        label_color: app.get_dkey('tas.rb lc')
        label_padding: app.get_dkey('tas.rb lp', root.width)
        font_size: app.get_dkey('tas.rb fs', root.width)
        size_hint: app.get_dkey('tas.rb s_h', root.width)
        pos_hint: app.get_dkey('tas.rb p_h', root.width, root.height)
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()

<RecruitPreview>:
    name: 'recruit_' + self.character.get_id()
    background_source: "../res/screens/backgrounds/background.png"
    AsyncImageBase:
        id: char_image
        size_hint: None, 0.9
        width: self.height * self.image_ratio
        pos_hint: {'x': 0, 'y': 0}
        allow_stretch: True
        source: root.character_image_source
    ImageBase:
        id: char_type_flag
        source: root.char_type_flag_source
        size_hint: app.get_dkey('rs.ctf s_h')
        pos_hint: app.get_dkey('rs.ctf p_h')
    ImageBase:
        id: type_flag
        source: root.type_flag_source
        size_hint: app.get_dkey('rs.tf s_h')
        pos_hint: app.get_dkey('rs.tf p_h')
    ImageBase:
        id: element_flag_background
        source: root.element_flag_background_source
        size_hint: app.get_dkey('rs.efb s_h')
        pos_hint: app.get_dkey('rs.efb p_h')
    ImageBase:
        id: element_flag_symbol
        source: root.element_flag_symbol_source
        size_hint: app.get_dkey('rs.efs s_h')
        pos_hint: app.get_dkey('rs.efs p_h')
    #Full Name
    LabelBase:
        id: full_name
        size_hint: (None, None)
        size: self.texture_size
        text: '[b]' + root.character.get_name() + '[/b]'
        markup: True
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('rs.fnl fs', root.height)
        pos_hint: app.get_dkey('rs.fnl p_h')
        color: app.get_dkey('rs.fnl.colrs ' + root.character.get_element().lower())
        outline_width: app.get_dkey('rs.fnl ow')
        outline_color: app.get_dkey('rs.fnl oc')
    #Display Name
    LabelBase:
        id: display_name
        size_hint: (None, None)
        size: self.texture_size
        text: '[b]' + root.character.get_display_name() + '[/b]'
        markup: True
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('rs.dnl fs', root.height)
        pos_hint: app.get_dkey('rs.dnl p_h')
        color: app.get_dkey('rs.dnl.colrs ' + root.character.get_type().lower())
        outline_width: app.get_dkey('rs.dnl ow')
        outline_color: app.get_dkey('rs.dnl oc')
    #Char Type Flag Label
    LabelBase:
        id: char_type_flag_label
        text: 'Supporter' if root.character.is_support() else 'Adventurer'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('rs.ctfl fs', root.width)
        size_hint: app.get_dkey('rs.ctfl s_h')
        pos_hint: app.get_dkey('rs.ctfl p_h')
        color: app.get_dkey('rs.ctfl c')
    #Type Flag Label
    LabelBase:
        id: type_flag_label
        text: root.character.get_type().capitalize() + ' Type'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('rs.tfl fs', root.width)
        size_hint: app.get_dkey('rs.tfl s_h')
        pos_hint: app.get_dkey('rs.tfl p_h')
        color: app.get_dkey('rs.tfl c')
    LabelBase:
        id: element_flag_label
        text: root.character.get_element().capitalize()
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('rs.efl fs', root.width)
        size_hint: app.get_dkey('rs.efl s_h')
        pos_hint: app.get_dkey('rs.efl p_h')
        color: app.get_dkey('rs.efl c')
        canvas.before:
            PushMatrix
            Rotate:
                angle: app.get_dkey("cas.eflgl ang")
                origin: self.center
        canvas.after:
            PopMatrix
    #Roll Again
    HTButton:
        id: roll_again
        path: '../res/screens/buttons/recruit_button'
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        text: 'Roll Again'
        font_name: '../res/fnt/Precious.ttf'
        label_color: app.get_dkey('rs.ra lc')
        label_padding: app.get_dkey('rs.ra lp', self.height)
        pos_hint: app.get_dkey('rs.ra p_h')
        font_size: app.get_dkey('rs.ra fs', root.height)
        size_hint: app.get_dkey('rs s_h')
        on_release: root.on_roll_again()
    #Confirm
    HTButton:
        id: confirm
        path: '../res/screens/buttons/recruit_button_confirm'
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        text: 'Confirm'
        font_name: '../res/fnt/Precious.ttf'
        label_color: app.get_dkey('rs.c lc')
        label_padding: app.get_dkey('rs.c lp', self.height)
        pos_hint: app.get_dkey('rs.c p_h')
        font_size: app.get_dkey('rs.c fs', root.height)
        size_hint: app.get_dkey('rs s_h')
        on_release: root.on_confirm()
    #Cancel
    HTButton:
        id: cancel
        path: '../res/screens/buttons/recruit_button_cancel'
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        text: 'Cancel'
        font_name: '../res/fnt/Precious.ttf'
        label_color: app.get_dkey('rs.ca lc')
        label_padding: app.get_dkey('rs.ca lp', self.height)
        pos_hint: app.get_dkey('rs.ca p_h')
        font_size: app.get_dkey('rs.ca fs', root.height)
        size_hint: app.get_dkey('rs s_h')
        on_release: root.on_cancel()
    #Character Attribute Screen
    HTButton:
        id: character_attribute
        path: '../res/screens/buttons/character_attribute'
        collide_image: '../res/screens/buttons/largebutton.collision.png'
        text: 'Attributes'
        font_name: '../res/fnt/Precious.ttf'
        label_color: app.get_dkey('rs.cas lc')
        label_padding: app.get_dkey('rs.cas lp', self.height)
        pos_hint: app.get_dkey('rs.cas p_h')
        font_size: app.get_dkey('rs.cas fs', root.height)
        size_hint: app.get_dkey('rs s_h')
        on_release: root.on_char_attribute()

<NoRecruitWidget>
    auto_dismiss: False
    background: '../res/screens/stats/sort_background.png'
    size_hint: app.get_dkey('nrw s_h')
    pos_hint: app.get_dkey('nrw p_h')
    border: app.get_dkey('nrw b')
    RelativeLayoutBase:
        LabelBase:
            id: label_large
            color: app.get_dkey('nrw.ll c')
            font_name: '../res/fnt/Gabriola.ttf'
            text: 'All Characters Recruited'
            font_size: app.get_dkey('nrw.ll fs', root.height)
            size_hint: app.get_dkey('nrw.ll s_h')
            pos_hint: app.get_dkey('nrw.ll p_h')
        LabelBase:
            id: label_small
            color: app.get_dkey('nrw.ls c')
            font_name: '../res/fnt/Gabriola.ttf'
            halign: 'center'
            text: 'More characters will be added\nin future updates'
            font_size: app.get_dkey('nrw.ls fs', root.height)
            size_hint: app.get_dkey('nrw.ls s_h')
            pos_hint: app.get_dkey('nrw.ls p_h')
        HTButton:
            id: ok
            font_name: '../res/fnt/Gabriola.ttf'
            text: 'Ok'
            path: '../res/screens/buttons/long_stat'
            on_release: root.dismiss()
            font_size: app.get_dkey('nrw.ok fs', root.height)
            size_hint: app.get_dkey('nrw.ok s_h')
            pos_hint: app.get_dkey('nrw.ok p_h')

<DungeonMain>:
    name: 'dungeon_main'
    animate_distance: app.get_dkey('dm.a ad', self.width)
    animate_start_left: app.get_dkey('dm.a a_s_l', self.width)
    animate_start_right: app.get_dkey('dm.a a_s_r', self.width)
    LabelBase:
        id: level_label
        text: 'Level - Surface' if root.level == 0 else 'Level - ' + str(root.level) + " - [color=ff0000][b]BOSS[/b][/color]" if root.boss else 'Level - ' + str(root.level)
        font_name: '../res/fnt/Precious.ttf'
        markup: True
        size: self.texture_size
        color: app.get_dkey('dm.ll c')
        font_size: app.get_dkey('dm.ll fs', root.height)
        size_hint: app.get_dkey('dm.ll s_h')
        pos_hint: app.get_dkey('dm.ll p_h')
    LabelBase:
        id: party_score_label
        text: 'Party Score - ' + str(root.party_score)
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('dm.psl c')
        font_size: app.get_dkey('dm.psl fs', root.height)
        size_hint: app.get_dkey('dm.psl s_h')
        pos_hint: app.get_dkey('dm.psl p_h')
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()
    HTButton:
        id: inventory_button
        path: '../res/screens/buttons/InventoryButton'
        text: 'Inventory'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('dm.ib fs', root.height)
        size_hint: app.get_dkey('dm.ib s_h')
        pos_hint: app.get_dkey('dm.ib p_h')
#        on_release: root.on_inventory()
    HTButton:
        id: gear_button
        path: '../res/screens/buttons/GearButton'
        text: 'Gear'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('dm.gb fs', root.height)
        size_hint: app.get_dkey('dm.gb s_h')
        pos_hint: app.get_dkey('dm.gb p_h')
        on_release: root.on_gear()
    ImageBase:
        id: gear_lock
        size_hint: app.get_dkey('dm.gb s_h')
        pos_hint: app.get_dkey('dm.gb p_h')
        source: '../res/screens/buttons/dungeon_button_lock.png'
    HTButton:
        id: ascend_button
        path: '../res/screens/buttons/AscendButton'
        text: 'Ascend'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('dm.ab fs', root.height)
        size_hint: app.get_dkey('dm.ab s_h')
        pos_hint: app.get_dkey('dm.ab p_h')
        on_release: root.on_ascend()
    ImageBase:
        id: ascend_lock
        size_hint: app.get_dkey('dm.ab s_h')
        pos_hint: app.get_dkey('dm.ab p_h')
        source: '../res/screens/buttons/dungeon_button_lock.png'
    HTButton:
        id: descend_button
        path: '../res/screens/buttons/AscendButton'
        text: 'Descend'
        font_name: '../res/fnt/Precious.ttf'
        font_size: app.get_dkey('dm.db fs', root.height)
        size_hint: app.get_dkey('dm.db s_h')
        pos_hint: app.get_dkey('dm.db p_h')
        on_release: root.on_descend()
    DragSnapWidget:
        id: portfolio
        loop: True
        on_change:
            root.on_widget_move(self.index)
            indexer.update_sources()
        size_hint: app.get_dkey('dm.cp s_h')
        pos_hint: app.get_dkey('dm.cp p_h')
    PartyIndexer:
        id: indexer
        size_hint: app.get_dkey('dm.ind s_h')
        pos_hint: app.get_dkey('dm.ind p_h')
    HTButton:
        id: left_arrow
        path: '../res/screens/buttons/ArrowLeft'
        size_hint: app.get_dkey('dm.la s_h')
        pos_hint: app.get_dkey('dm.la p_h')
        x: root.animate_start_left
        on_release: root.on_arrow_touch(True)
    HTButton:
        id: right_arrow
        path: '../res/screens/buttons/ArrowRight'
        size_hint: app.get_dkey('dm.ra s_h')
        pos_hint: app.get_dkey('dm.ra p_h')
        x: root.animate_start_right
        on_release: root.on_arrow_touch(False)
    ButtonBase:
        text: 'Test add bonus'
        size_hint: 0.1, 0.1
        pos_hint: {'right': 1, 'top': 1}
        on_release: root.add_bonus()

<DragSnapWidget>:
    min_move: 0.3

<HeartIndicator>:
    #Outline in BG
    ImageBase:
        id: outline
        source: '../res/screens/stats/heart_empty.png'
    StencilViewBase:
        opacity: 1 if root.familiarity < 1 else 0
        size_hint: 1, root.familiarity
        ImageBase:
            id: red
            source: '../res/screens/stats/heart_red.png'
            size: outline.size
            pos: outline.pos
    StencilViewBase:
        size_hint: 1, root.familiarity_gold
        ImageBase:
            id: gold
            source: '../res/screens/stats/heart_gold.png'
            size: outline.size
            pos: outline.pos
    HTButton:
        id: button
        opacity: 0
        collide_image: '../res/screens/stats/heart_empty.png'
        on_release: root.toggle_hint()
        on_hover_enter: root.show_hint()
        on_hover_exit: root.hide_hint()

<HintWidget>:
    background_color: 1, 1, 1, 1
    overlay_color: 0, 0, 0, 0
    size_hint: None, 0.3
    width: hint_text.width
    ScrollViewBase:
        LabelBase:
            id: hint_text
            text: root.text
            size_hint: None, None
            size: self.texture_size

<PartyIndexer>:
    ImageBase:
        id: point_1
        source: root.sources[0]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.1 p_h')
    ImageBase:
        id: point_2
        source: root.sources[1]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.2 p_h')
    ImageBase:
        id: point_3
        source: root.sources[2]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.3 p_h')
    ImageBase:
        id: point_4
        source: root.sources[3]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.4 p_h')
    ImageBase:
        id: point_5
        source: root.sources[4]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.5 p_h')
    ImageBase:
        id: point_6
        source: root.sources[5]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.6 p_h')
    ImageBase:
        id: point_7
        source: root.sources[6]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.7 p_h')
    ImageBase:
        id: point_8
        source: root.sources[7]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.8 p_h')
    ImageBase:
        id: point_9
        source: root.sources[8]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.9 p_h')
    ImageBase:
        id: point_10
        source: root.sources[9]
        allow_stretch: True
        size_hint: app.get_dkey('dm.ind.p s_h')
        pos_hint: app.get_dkey('dm.ind.p.10 p_h')

<CharacterPortfolio>:
    LabelBase:
        id: title
        text: 'Party ' + str(root.party_index)
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey('cpo.t c')
        font_size: app.get_dkey('cpo.t fs', root.height)
        size_hint: app.get_dkey('cpo.t s_h')
        pos_hint: app.get_dkey('cpo.t p_h')
    ImageBase:
        id: lock
        source: '../res/screens/stats/lock.png'
        allow_stretch: True
        opacity : 1 if root.locked else 0
        size_hint: app.get_dkey('cpo.l s_h')
        pos_hint: app.get_dkey('cpo.l p_h')

<HTButton>:
    hover_rect: [self.x, self.y, self.width, self.height]
    canvas:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            id: background
            size: self.size
            pos: self.pos
            texture: self.texture
    LabelBase:
        id: label
        text: root.text
        font_size: root.font_size
        font_name: root.font_name
        halign: root.label_halign
        valign: root.label_valign
        color: root.label_color
        size_hint: (None, None)
        size: root.width - root.label_padding[0] - root.label_padding[2], root.height - root.label_padding[1] - root.label_padding[3]
        pos: root.x + root.label_padding[0], root.y + root.label_padding[3]

<EmptyCharacterPreviewScreen>:
    background_source: ''
    background: False
    name: 'empty'
    HTButton:
        id: button
        path: '../res/screens/buttons/empty_overlay'
        size_hint: app.get_dkey('ecp.b s_h')
        pos_hint: app.get_dkey('ecp.b p_h')
        on_release: root.on_button()
    ImageBase:
        id: lock
        source: '../res/screens/stats/lock.png'
        allow_stretch: True
        opacity: 1 if root.locked else 0
        size_hint: app.get_dkey('ecp.l s_h')
        pos_hint: app.get_dkey('ecp.l p_h')

<FilledCharacterPreviewScreen>:
    background_source: ''
    background: False
    FilledCharacterPreview:
        id: filledPreview
        preview: root.preview
        is_support: root.is_support
        is_select: False
        character: root.character
        support: root.support

<FilledCharacterPreview>:
    ImageBase:
        id: background
        source: root.background_source
    AsyncImageBase:
        id: char_image
        source: root.char_image_source
    AsyncImageBase:
        id: support_image
        opacity: 0 if root.support is None else 1
        source: root.support_image_source
    ImageBase:
        id: overlay
        source: root.overlay_source
    HTButton:
        id: char_button
        path: root.char_button_source
        collide_image: root.char_button_collide_image
        on_touch_down: root.on_char_touch_down(*args)
        on_touch_up: root.on_char_touch_up(*args)
    HTButton:
        id: support_button
        path: root.support_button_source
        collide_image: root.support_button_collide_image
        on_touch_down: root.on_support_touch_down(*args)
        on_touch_up: root.on_support_touch_up(*args)
    HeartIndicator:
        id: character_heart
        size_hint: 0.25, 0.062
        pos_hint: {'x': 0.725, 'center_y': 0.961}
        opacity: 0 if root.is_select else 0 if not self.is_visible else 1
        disabled: True if self.opacity == 0 else False
        on_hint_open: root.on_char_hint_open()
        on_hint_close: root.on_char_hint_close()
    HeartIndicator:
        id: support_heart
        size_hint: 0.25, 0.062
        pos_hint: {'center_x': 0.829, 'center_y': 0.544}
        opacity: 0 if root.is_select else 0 if root.support is None else 1
        disabled: True if self.opacity == 0 else False
        on_hint_open: root.on_support_hint_open()
        on_hint_close: root.on_support_hint_close()
    #Flags
    ImageBase:
        id: type_flag
        source: '' if root.character is None else '../res/screens/stats/' + str(root.character.get_type()).lower() + '_flag.png'
        allow_stretch: True
        opacity: 1 if root.is_select else 0
        size_hint: app.get_dkey('fcp.tf s_h')
        pos_hint: app.get_dkey('fcp.tf p_h')
    LabelBase:
        id: type_flag_label
        text: '' if root.character is None else str(root.character.get_type()) + ' Type'
        font_name: root.font_name
        opacity: 1 if root.is_select else 0
        color: app.get_dkey('fcp.tfl c')
        size_hint: app.get_dkey('fcp.tfl s_h')
        font_size: app.get_dkey('fcp.tfl fs', root.height)
        pos_hint: app.get_dkey('fcp.tfl p_h')
    # STATS
    ImageBase:
        id: phy_atk_image
        source: '../res/screens/stats/PhysicalAttack.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.phy_atk p_h')
    ImageBase:
        id: mag_atk_image
        source: '../res/screens/stats/MagicalAttack.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.mag_atk p_h')
    ImageBase:
        id: health_image
        source: '../res/screens/stats/Health.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.health p_h')
    ImageBase:
        id: mana_image
        source: '../res/screens/stats/Mana.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.mana p_h')
    ImageBase:
        id: defense_image
        source: '../res/screens/stats/Defense.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.defense p_h')
    ImageBase:
        id: strength_image
        source: '../res/screens/stats/Str.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.strength p_h')
    ImageBase:
        id: magic_image
        source: '../res/screens/stats/Mag.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.magic p_h')
    ImageBase:
        id: endurance_image
        source: '../res/screens/stats/End.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.endurance p_h')
    ImageBase:
        id: dexterity_image
        source: '../res/screens/stats/Dex.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.dexterity p_h')
    ImageBase:
        id: agility_image
        source: '../res/screens/stats/Agi.png'
        allow_stretch: True
        size_hint: app.get_dkey('fcp.img s_h')
        pos_hint: app.get_dkey('fcp.img.agility p_h')
    LabelBase:
        id: phyatk_label_word
        text: 'Phy. Atk'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.phy_atk_word p_h')
    LabelBase:
        id: phyatk_label_number
        text: root.phy_atk_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.phy_atk_number p_h')
    LabelBase:
        id: magatk_label_word
        text: 'Mag. Atk'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.mag_atk_word p_h')
    LabelBase:
        id: magatk_label_number
        text: root.mag_atk_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.mag_atk_number p_h')
    LabelBase:
        id: health_label_word
        text: 'Health'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.health_word p_h')
    LabelBase:
        id: health_label_number
        text: root.health_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.health_number p_h')
    LabelBase:
        id: mana_label_word
        text: 'Mana'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.mana_word p_h')
    LabelBase:
        id: mana_label_number
        text: root.mana_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.mana_number p_h')
    LabelBase:
        id: defense_label_word
        text: 'Defense'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.defense_word p_h')
    LabelBase:
        id: defense_label_number
        text: root.defense_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.defense_number p_h')
    LabelBase:
        id: strength_label_word
        text: 'trength'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.strength_word p_h')
    LabelBase:
        id: strength_label_number
        text: root.strength_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.strength_number p_h')
    LabelBase:
        id: magic_label_word
        text: 'agic'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.magic_word p_h')
    LabelBase:
        id: magic_label_number
        text: root.magic_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.magic_number p_h')
    LabelBase:
        id: endurance_label_word
        text: 'ndurance'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.endurance_word p_h')
    LabelBase:
        id: endurance_label_number
        text: root.endurance_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.endurance_number p_h')
    LabelBase:
        id: dexterity_label_word
        text: 'exterity'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.dexterity_word p_h')
    LabelBase:
        id: dexterity_label_number
        text: root.dexterity_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.dexterity_number p_h')
    LabelBase:
        id: agility_label_word
        text: 'gility'
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.agility_word p_h')
    LabelBase:
        id: agility_label_number
        text: root.agility_text
        color: root.text_color
        font_name: root.font_name
        width: self.texture_size[0]
        font_size: app.get_dkey('fcp.lbl fs', root.height)
        size_hint: app.get_dkey('fcp.lbl s_h')
        pos_hint: app.get_dkey('fcp.lbl.agility_number p_h')
    # Lock
    ImageBase:
        id: lock
        source: '../res/screens/stats/lock.png'
        allow_stretch: True
        opacity: 1 if root.locked else 0
        size_hint: app.get_dkey('fcp.lck s_h')
        pos_hint: app.get_dkey('fcp.lck p_h')
    LabelBase:
        id: tag
        text: '[b]Selected[/b]' if root.has_tag else ''
        markup: True
        color: app.get_dkey('fcp.tag c')
        outline_color: app.get_dkey('fcp.tag oc')
        outline_width: app.get_dkey('fcp.tag ow')
        font_size: app.get_dkey('fcp.tag fs', root.height)
        size_hint: app.get_dkey('fcp.tag s_h')
        pos_hint: app.get_dkey('fcp.tag p_h')
    ImageBase:
        id: star_1
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(1).broken else '../res/screens/stats/star.png' if root.character.get_rank(1).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.character is None else 1 if root.character.get_rank(1).unlocked else 0
        size_hint: app.get_dkey('fcp.star_1 s_h')
        pos_hint: app.get_dkey('fcp.star_1 p_h')
    ImageBase:
        id: star_2
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(2).broken else '../res/screens/stats/star.png' if root.character.get_rank(2).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(2).unlocked else 0
        size_hint: app.get_dkey('fcp.star_2 s_h')
        pos_hint: app.get_dkey('fcp.star_2.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_2.two p_h')
    ImageBase:
        id: star_3
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(3).broken else '../res/screens/stats/star.png' if root.character.get_rank(3).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(3).unlocked else 0
        size_hint: app.get_dkey('fcp.star_3 s_h')
        pos_hint: app.get_dkey('fcp.star_3.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_3.two p_h')
    ImageBase:
        id: star_4
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(4).broken else '../res/screens/stats/star.png' if root.character.get_rank(4).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.character is None else 1 if root.character.get_rank(4).unlocked else 0
        size_hint: app.get_dkey('fcp.star_4 s_h')
        pos_hint: app.get_dkey('fcp.star_4.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_4.two p_h')
    ImageBase:
        id: star_5
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(5).broken else '../res/screens/stats/star.png' if root.character.get_rank(5).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(5).unlocked else 0
        size_hint: app.get_dkey('fcp.star_5 s_h')
        pos_hint: app.get_dkey('fcp.star_5.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_5.two p_h')
    ImageBase:
        id: star_6
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(6).broken else '../res/screens/stats/star.png' if root.character.get_rank(6).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(6).unlocked else 0
        size_hint: app.get_dkey('fcp.star_6 s_h')
        pos_hint: app.get_dkey('fcp.star_6.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_6.two p_h')
    ImageBase:
        id: star_7
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(7).broken else '../res/screens/stats/star.png' if root.character.get_rank(7).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(7).unlocked else 0
        size_hint: app.get_dkey('fcp.star_7 s_h')
        pos_hint: app.get_dkey('fcp.star_7.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_7.two p_h')
    ImageBase:
        id: star_8
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(8).broken else '../res/screens/stats/star.png' if root.character.get_rank(8).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(8).unlocked else 0
        size_hint: app.get_dkey('fcp.star_8 s_h')
        pos_hint: app.get_dkey('fcp.star_8.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_8.two p_h')
    ImageBase:
        id: star_9
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(9).broken else '../res/screens/stats/star.png' if root.character.get_rank(9).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(9).unlocked else 0
        size_hint: app.get_dkey('fcp.star_9 s_h')
        pos_hint: app.get_dkey('fcp.star_9.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_9.two p_h')
    AsyncImageBase:
        id: star_10
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(10).broken else '../res/screens/stats/star.png' if root.character.get_rank(10).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(10).unlocked else 0
        size_hint: app.get_dkey('fcp.star_10 s_h')
        pos_hint: app.get_dkey('fcp.star_10.one p_h') if not character_heart.is_visible else app.get_dkey('fcp.star_10.two p_h')
    ImageBase:
        id: star_11
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(1).broken else '../res/screens/stats/star.png' if root.support.get_rank(1).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(1).unlocked else 0
        size_hint: app.get_dkey('fcp.star_11 s_h')
        pos_hint: app.get_dkey('fcp.star_11 p_h')
    ImageBase:
        id: star_12
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(2).broken else '../res/screens/stats/star.png' if root.support.get_rank(2).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(2).unlocked else 0
        size_hint: app.get_dkey('fcp.star_12 s_h')
        pos_hint: app.get_dkey('fcp.star_12 p_h')
    ImageBase:
        id: star_13
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(3).broken else '../res/screens/stats/star.png' if root.support.get_rank(3).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(3).unlocked else 0
        size_hint: app.get_dkey('fcp.star_13 s_h')
        pos_hint: app.get_dkey('fcp.star_13 p_h')
    ImageBase:
        id: star_14
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(4).broken else '../res/screens/stats/star.png' if root.support.get_rank(4).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(4).unlocked else 0
        size_hint: app.get_dkey('fcp.star_14 s_h')
        pos_hint: app.get_dkey('fcp.star_14 p_h')
    ImageBase:
        id: star_15
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(5).broken else '../res/screens/stats/star.png' if root.support.get_rank(5).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(5).unlocked else 0
        size_hint: app.get_dkey('fcp.star_15 s_h')
        pos_hint: app.get_dkey('fcp.star_15 p_h')
    ImageBase:
        id: star_16
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(6).broken else '../res/screens/stats/star.png' if root.support.get_rank(6).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(6).unlocked else 0
        size_hint: app.get_dkey('fcp.star_16 s_h')
        pos_hint: app.get_dkey('fcp.star_16 p_h')
    ImageBase:
        id: star_17
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(7).broken else '../res/screens/stats/star.png' if root.support.get_rank(7).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(7).unlocked else 0
        size_hint: app.get_dkey('fcp.star_17 s_h')
        pos_hint: app.get_dkey('fcp.star_17 p_h')
    ImageBase:
        id: star_18
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(8).broken else '../res/screens/stats/star.png' if root.support.get_rank(8).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(8).unlocked else 0
        size_hint: app.get_dkey('fcp.star_18 s_h')
        pos_hint: app.get_dkey('fcp.star_18 p_h')
    ImageBase:
        id: star_19
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(9).broken else '../res/screens/stats/star.png' if root.support.get_rank(9).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(9).unlocked else 0
        size_hint: app.get_dkey('fcp.star_19 s_h')
        pos_hint: app.get_dkey('fcp.star_19 p_h')
    ImageBase:
        id: star_20
        source: '' if root.support is None else '../res/screens/stats/rankbrk.png' if root.support.get_rank(10).broken else '../res/screens/stats/star.png' if root.support.get_rank(10).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.support is None else 1 if root.support.get_rank(10).unlocked else 0
        size_hint: app.get_dkey('fcp.star_20 s_h')
        pos_hint: app.get_dkey('fcp.star_20 p_h')
    Hint:
        id: hint
        disabled: True
        opacity: 0
        size_hint: 0.92, 0.3434
        pos_hint: {'center_x': 0.5, 'top': 0.9273}
        hint_text: root.hint_text

<Hint>:
    ImageBase:
        source: '../res/screens/stats/hint_background.png'
        keep_ratio: False
        allow_stretch: True
    ScrollViewBase:
        id: scroll
        do_scroll_y: True
        do_scroll_x: False
        GridLayoutBase:
            cols: 2
            id: grid
            size_hint_y: None
            cols_minimum: {0: root.width * 0.65 - root.height * 0.05, 1: root.width * 0.35 - root.height * 0.05}
            height: self.minimum_height
            padding: root.height * 0.05
            spacing: 0, root.height * 0.025

<HintNameWords>:
    id: hint_text
    size_hint_y: None
    color: 0, 0, 0, 1
    font_name: '../res/fnt/Gabriola.ttf'
    text_size: self.width, None
    halign: 'left'
    height: self.texture_size[1]

<HintNameNumbers>:
    id: hint_numbers
    color: 0, 0, 0, 1
    font_name: '../res/fnt/Gabriola.ttf'
    halign: 'right'
    valign: 'middle'
    text_size: self.width, None

<SquareCharacterPreview>:
    ImageBase:
        id: background
        allow_stretch: True
        source: root.background_source
    AsyncImageBase:
        id: char_image
        allow_stretch: True
        source: root.char_image_source
    ImageBase:
        id: overlay
        allow_stretch: True
        source: root.overlay_source
    HTButton:
        id: char_button
        path: root.char_button_source
        collide_image: root.char_button_collide_image
        on_touch_down: root.on_char_touch_down(*args)
        on_touch_up: root.on_char_touch_up(*args)
    ImageBase:
        id: stat_image
        allow_stretch: True
        source: root.stat_image_source
        size_hint: 0.16, 0.16
        pos_hint: {'x': 0.055, 'top': 0.98}
        opacity: 0 if root.stat_image_source == '' else 1 if root.has_stat else 0
    LabelBase:
        id: stat_label
        text: root.stat_text
        opacity: 1 if root.has_stat else 0
        color: 0.796, 0.773, 0.678, 1
        font_name: '../res/fnt/Gabriola.ttf'
        font_size: root.height * 0.14
        size_hint_x: 1 if root.stat_type == 'Name' else 0.392 if root.stat_image_source == '' else 0.232
        size_hint_y: None
        height: self.texture_size[1]
        pos_hint: {'center_x': 0.5, 'center_y': 0.9} if root.stat_type == 'Name' else {'right': 0.5, 'center_y': 0.9}
    LabelBase:
        id: stat_numbers
        text: str(round(root.stat_number, 2))
        opacity: 0 if root.stat_type == 'Name' else 0 if root.stat_type == 'Party' else 0 if root.stat_type == 'Rank' else 1 if root.has_stat else 0
        color: 0.796, 0.773, 0.678, 1
        font_name: '../res/fnt/Gabriola.ttf'
        font_size: root.height * 0.14
        size_hint_x: 0.48
        size_hint_y: None
        height: self.texture_size[1]
        pos_hint: {'right': 0.98, 'center_y': 0.9}
    LabelBase:
        id: tag
        text: '[b]Selected[/b]' if root.has_tag else ''
        markup: True
        color: app.get_dkey('scp.tag c')
        outline_color: app.get_dkey('scp.tag oc')
        outline_width: app.get_dkey('scp.tag ow')
        font_size: app.get_dkey('scp.tag fs', root.height)
        size_hint: app.get_dkey('scp.tag s_h')
        pos_hint: app.get_dkey('scp.tag p_h')
    ImageBase:
        id: star_1
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(1).broken else '../res/screens/stats/star.png' if root.character.get_rank(1).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.character is None else 1 if root.character.get_rank(1).unlocked else 0
        size_hint: app.get_dkey('scp.star_1 s_h')
        pos_hint: app.get_dkey('scp.star_1 p_h')
    ImageBase:
        id: star_2
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(2).broken else '../res/screens/stats/star.png' if root.character.get_rank(2).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(2).unlocked else 0
        size_hint: app.get_dkey('scp.star_2 s_h')
        pos_hint: app.get_dkey('scp.star_2 p_h')
    ImageBase:
        id: star_3
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(3).broken else '../res/screens/stats/star.png' if root.character.get_rank(3).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(3).unlocked else 0
        size_hint: app.get_dkey('scp.star_3 s_h')
        pos_hint: app.get_dkey('scp.star_3 p_h')
    ImageBase:
        id: star_4
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(4).broken else '../res/screens/stats/star.png' if root.character.get_rank(4).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.character is None else 1 if root.character.get_rank(4).unlocked else 0
        size_hint: app.get_dkey('scp.star_4 s_h')
        pos_hint: app.get_dkey('scp.star_4 p_h')
    ImageBase:
        id: star_5
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(5).broken else '../res/screens/stats/star.png' if root.character.get_rank(5).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(5).unlocked else 0
        size_hint: app.get_dkey('scp.star_5 s_h')
        pos_hint: app.get_dkey('scp.star_5 p_h')
    ImageBase:
        id: star_6
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(6).broken else '../res/screens/stats/star.png' if root.character.get_rank(6).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(6).unlocked else 0
        size_hint: app.get_dkey('scp.star_6 s_h')
        pos_hint: app.get_dkey('scp.star_6 p_h')
    ImageBase:
        id: star_7
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(7).broken else '../res/screens/stats/star.png' if root.character.get_rank(7).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(7).unlocked else 0
        size_hint: app.get_dkey('scp.star_7 s_h')
        pos_hint: app.get_dkey('scp.star_7 p_h')
    ImageBase:
        id: star_8
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(8).broken else '../res/screens/stats/star.png' if root.character.get_rank(8).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(8).unlocked else 0
        size_hint: app.get_dkey('scp.star_8 s_h')
        pos_hint: app.get_dkey('scp.star_8 p_h')
    ImageBase:
        id: star_9
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(9).broken else '../res/screens/stats/star.png' if root.character.get_rank(9).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(9).unlocked else 0
        size_hint: app.get_dkey('scp.star_9 s_h')
        pos_hint: app.get_dkey('scp.star_9 p_h')
    ImageBase:
        id: star_10
        source: '' if root.character is None else '../res/screens/stats/rankbrk.png' if root.character.get_rank(10).broken else '../res/screens/stats/star.png' if root.character.get_rank(10).unlocked else ''
        allow_stretch: True
        opacity:  0 if root.character is None else 1 if root.character.get_rank(10).unlocked else 0
        size_hint: app.get_dkey('scp.star_10 s_h')
        pos_hint: app.get_dkey('scp.star_10 p_h')

<CharacterSelector>:
    name: 'select_char'
    canvas:
        Rectangle:
            id: overlay
            size: self.size
            pos: self.pos
            texture: self.overlay_texture
        Rectangle:
            id: number_icon
            size: app.get_dkey('cs.ni s_h', root.width, root.height)
            pos: app.get_dkey('cs.ni pos', root.width, root.height)
            texture: self.number_icon_texture
    HTButton:
        id: back
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()
    HTButton:
        id: sort
        path: '../res/screens/buttons/long_stat'
        font_size: app.get_dkey('cs.bs fs', root.height)
        size_hint: app.get_dkey('cs.bs s_h')
        pos_hint: app.get_dkey('cs.bs.s p_h')
        on_release: root.on_sort()
    HTButton:
        id: filter
        path: '../res/screens/buttons/long_stat'
        text: 'Filter'
        font_size: app.get_dkey('cs.bs fs', root.height)
        size_hint: app.get_dkey('cs.bs s_h')
        pos_hint: app.get_dkey('cs.bs.f p_h')
        on_release: root.on_filter()
    HTButton:
        id: switch_display
        path: '../res/screens/buttons/long_stat'
        text: 'Switch Display'
        font_size: app.get_dkey('cs.bs fs', root.height)
        size_hint: app.get_dkey('cs.bs s_h')
        pos_hint: app.get_dkey('cs.bs.sd p_h')
        toggle_enabled: True
        on_toggle_up: root.on_scroll()
        on_toggle_down: root.on_grid()
    LabelBase:
        id: number
        font_name: '../res/fnt/Precious.ttf'
        text: str(root.character_num)
        color: app.get_dkey('cs.nl c')
        font_size: app.get_dkey('cs.nl fs', root.height)
        size_hint: app.get_dkey('cs.nl s_h')
        pos_hint: app.get_dkey('cs.nl p_h')
    LabelBase:
        id: no_chars
        font_name: '../res/fnt/Gabriola.ttf'
        text: 'No Characters to Display'
        color: 0, 0, 0, 1
        font_size: root.height * 0.1
        opacity: 0 if root.multi is None else 0 if root.character_num > 0 else 1
        pos_hint: {'y': 0, 'right': 1}
        size_hint_x: 1 if root.single is None else 0.85
        size_hint_y: 0.85

<ScrollPreview>:
    id: layout
    rows: 1
    default_size: app.get_dkey('scrp ds', app.width)
    default_size_hint: app.get_dkey('scrp ds_h')
    size_hint_x: None
    width: self.minimum_width
    orientation: 'horizontal'
    spacing: app.get_dkey('scrp spa')
    padding: app.get_dkey('scrp pad')

<GridPreview>:
    id: layout
    cols: 8
    default_size_hint: app.get_dkey('grdp ds_h')
    col_default_width: (self.width - self.padding[0] * 2 - self.spacing[0] * 7) / 8
    row_default_height: (self.width - self.padding[0] * 2 - self.spacing[0] * 7) / 8
#    default_size: app.get_dkey('grdp ds', app.width)
    size_hint_y: None
    height: self.minimum_height
    orientation: 'vertical'
    spacing: app.get_dkey('grdp spa', self.width)
    padding: app.get_dkey('grdp pad', self.width)

<SinglePreview>:
    FilledCharacterPreview:
        id: root_preview
        preview: root.preview
        is_support: root.is_support
        is_select: True
        character: root.character
        support: None
        size_hint: app.get_dkey('sinp s_h')
        pos_hint: app.get_dkey('sinp p_h')

<SortWidget>:
    id: sort
    auto_dismiss: False
    background: '../res/screens/stats/sort_background.png'
    size_hint: app.get_dkey('sw s_h')
    pos_hint: app.get_dkey('sw p_h')
    border: app.get_dkey('sw b')
    RelativeLayoutBase:
        HTButton:
            id: back
            path: '../res/screens/buttons/back'
            size_hint: app.get_dkey('sw.bb s_h')
            pos_hint: app.get_dkey('sw.bb p_h')
        GridLayoutBase:
            id: main
            cols: 1
            rows: 5
            padding: app.get_dkey('sw.lm pad', root.width, root.height)
            spacing: app.get_dkey('sw.lm spa', root.width, root.height)
            size_hint: app.get_dkey('sw.lm s_h')
            pos_hint: app.get_dkey('sw.lm p_h')
            LabelBase:
                id: title
                text: 'Sort'
                font_name: '../res/fnt/Precious.ttf'
                color: app.get_dkey('sw.t c')
                font_size: app.get_dkey('sw.t fs', root.height)
                size_hint: app.get_dkey('sw.t s_h')
            ImageBase:
                source: '../res/screens/stats/overlay_bar.png'
                size_hint: app.get_dkey('sw.ob s_h')
            GridLayoutBase:
                id: direction
                cols: 2
                rows: 1
                padding: app.get_dkey('sw.l1 pad', root.width, root.height)
                spacing: app.get_dkey('sw.l1 spa', root.width, root.height)
                size_hint: app.get_dkey('sw.l1 s_h')
                HTButton:
                    id: ascending
                    text: 'Ascending'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: descending
                    text: 'Descending'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
            ImageBase:
                source: '../res/screens/stats/overlay_bar.png'
                size_hint: app.get_dkey('sw.ob s_h')
            GridLayoutBase:
                id: query
                cols: 3
                rows: 5
                padding: app.get_dkey('sw.l2 pad', root.width, root.height)
                spacing: app.get_dkey('sw.l2 spa', root.width, root.height)
                size_hint: app.get_dkey('sw.l2 s_h')
                HTButton:
                    id: strength
                    text: 'Strength'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: magic
                    text: 'Magic'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: endurance
                    text: 'Endurance'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: dexterity
                    text: 'Dexterity'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: agility
                    text: 'Agility'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: health
                    text: 'Health'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: mana
                    text: 'Mana'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: phyatk
                    text: 'Phy. Atk'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: magatk
                    text: 'Mag. Atk'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: defense
                    text: 'Defense'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: party
                    text: 'Party'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: rank
                    text: 'Rank'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: name
                    text: 'Name'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: score
                    text: 'Score'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)
                HTButton:
                    id: worth
                    text: 'Worth'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('sw.bu s_h')
                    font_size: app.get_dkey('sw.bu fs', root.height)

<FilterWidget>:
    id: filter
    auto_dismiss: False
    background: '../res/screens/stats/sort_background.png'
    size_hint: app.get_dkey('fw s_h')
    pos_hint: app.get_dkey('fw p_h')
    border: app.get_dkey('fw b')
    RelativeLayoutBase:
        HTButton:
            id: back
            path: '../res/screens/buttons/back'
            size_hint: app.get_dkey('fw.bb s_h')
            pos_hint: app.get_dkey('fw.bb p_h')
        GridLayoutBase:
            cols: 1
            rows: 11
            size_hint: app.get_dkey("fw.ml s_h")
            pos_hint: app.get_dkey("fw.ml p_h")
            padding: app.get_dkey("fw.ml pad", root.width, root.height)
            LabelBase:
                id: title
                text: 'Filter'
                font_name: '../res/fnt/Precious.ttf'
                color: app.get_dkey('fw.t c')
                font_size: app.get_dkey('fw.t fs', root.height)
                size_hint: app.get_dkey('fw.t s_h')
                height: self.texture_size[1]
            RelativeLayoutBase:
                id: space
                size_hint: 1, 0.1
                HTButton:
                    id: apply_filter
                    text: 'Apply Filter'
                    path: '../res/screens/buttons/long_stat'
                    size_hint: app.get_dkey('fw.fb s_h')
                    font_size: app.get_dkey('fw.fb fs', root.height)
                    pos_hint: app.get_dkey('fw.fb p_h', root.height)
            ImageBase:
                id: type_overlay_bar
                allow_stretch: True
                source: '../res/screens/stats/overlay_bar.png'
                size_hint: app.get_dkey('fw.ob s_h')
            LabelBase:
                id: type_label
                text: 'By Type'
                font_name: '../res/fnt/Precious.ttf'
                color: app.get_dkey('fw.ot c')
                size_hint: app.get_dkey('fw.ot s_h')
                size: self.texture_size
                font_size: app.get_dkey('fw.ot fs', root.height)
            GridLayoutBase:
                id: layout_type
                cols: 5
                rows: 1
                size_hint: app.get_dkey("fw.ols s_h")
                HTButton:
                    id: magical
                    text: 'Magical'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: physical
                    text: 'Physical'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: balanced
                    text: 'Balanced'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: defensive
                    text: 'Defensive'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: healing
                    text: 'Healing'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
            ImageBase:
                id: element_overlay_bar
                allow_stretch: True
                source: '../res/screens/stats/overlay_bar.png'
                size_hint: app.get_dkey('fw.ob s_h')
            LabelBase:
                id: element_label
                text: 'By Element'
                font_name: '../res/fnt/Precious.ttf'
                color: app.get_dkey('fw.ot c')
                size_hint: app.get_dkey('fw.ot s_h')
                size: self.texture_size
                font_size: app.get_dkey('fw.ot fs', root.height)
            GridLayoutBase:
                id: layout_element
                cols: 5
                rows: 2
                size_hint: app.get_dkey("fw.oll s_h")
                HTButton:
                    id: light
                    text: 'Light'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: dark
                    text: 'Dark'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: earth
                    text: 'Earth'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: wind
                    text: 'Wind'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: thunder
                    text: 'Thunder'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: fire
                    text: 'Fire'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
                HTButton:
                    id: water
                    text: 'Water'
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    font_size: app.get_dkey('fw.bu fs', root.height)
                    label_padding: app.get_dkey('fw.bu lp', self.height)
            ImageBase:
                id: rank_overlay_bar
                allow_stretch: True
                source: '../res/screens/stats/overlay_bar.png'
                size_hint: app.get_dkey('fw.ob s_h')
            LabelBase:
                id: rank_label
                text: 'By Rank'
                font_name: '../res/fnt/Precious.ttf'
                color: app.get_dkey('fw.ot c')
                size_hint: app.get_dkey('fw.ot s_h')
                size: self.texture_size
                font_size: app.get_dkey('fw.ot fs', root.height)
            GridLayoutBase:
                id: rank_element
                cols: 5
                rows: 2
                size_hint: app.get_dkey("fw.oll s_h")
                HTButton:
                    id: rank_1
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.582, 'center_y': 0.5}
                HTButton:
                    id: rank_2
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5642, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5998, 'center_y': 0.5}
                HTButton:
                    id: rank_3
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.54225, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.582, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.62175, 'center_y': 0.5}
                HTButton:
                    id: rank_4
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5289, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5642, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5998, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6351, 'center_y': 0.5}
                HTButton:
                    id: rank_5
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5025, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.54225, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.582, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.62175, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6615, 'center_y': 0.5}
                HTButton:
                    id: rank_6
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.4936, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5289, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5642, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5998, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6351, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6704, 'center_y': 0.5}
                HTButton:
                    id: rank_7
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.46275, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5025, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.54225, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.582, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.62175, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6615, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.70125, 'center_y': 0.5}
                HTButton:
                    id: rank_8
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.4583, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.4936, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5289, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5642, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5998, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6351, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6704, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.7057, 'center_y': 0.5}
                HTButton:
                    id: rank_9
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.423, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.46275, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5025, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.54225, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.582, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.62175, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6615, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.70125, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.741, 'center_y': 0.5}
                HTButton:
                    id: rank_10
                    path: '../res/screens/buttons/long_toggle'
                    toggle_enabled: True
                    toggle_state: True
                    RelativeLayoutBase:
                        size: self.parent.size
                        pos: self.parent.pos
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.423, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.4583, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.4936, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5289, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5642, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.5998, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6351, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.6704, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.7057, 'center_y': 0.5}
                        ImageBase:
                            source: '../res/screens/stats/star.png'
                            size_hint: 0.226, 0.6
                            pos_hint: {'center_x': 0.741, 'center_y': 0.5}

<CharacterAttributeScreen>:
    name: self.char.get_name()
    ImageBase:
        id: familia_mark
        source: '' if root.char is None else '../res/familias/marks/Takemikazuchi.png'
        nocache: True
        size_hint: app.get_dkey('cas.ci s_h')
        width: self.height * self.image_ratio
        pos_hint: app.get_dkey('cas.ci p_h')
    ImageBase:
        id: char_image
        source: '' if root.char is None else root.char.full_image_source
        allow_stretch: True
        nocache: True
        size_hint: app.get_dkey('cas.ci s_h')
        width: self.height * self.image_ratio
        pos_hint: app.get_dkey('cas.ci p_h')
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()
    ImageBase:
        id: overlay_background
        source: root.overlay_background_source
        allow_stretch: True
        size_hint: app.get_dkey('cas.os.ob s_h')
        pos_hint: app.get_dkey('cas.os p_h')
    ImageBase:
        id: overlay
        source: root.overlay_source
        allow_stretch: True
        size_hint: app.get_dkey('cas.os.o s_h')
        pos_hint: app.get_dkey('cas.os p_h')
    StatInfoBox:
        id: persistent_layout
        type_flag_source: '' if root.char is None else "../res/screens/recruit/" + str(root.char.get_type()).lower() + "_flag.png"
        element_flag_source: '' if root.char is None else "../res/screens/attribute/" + root.char.get_element().lower() + "_flag.png"
        element_flag_image_source: '' if root.char is None else "../res/screens/attribute/" + root.char.get_element().lower() + ".png"
        char_type: '' if root.char is None else 'Supporter' if root.char.is_support() else 'Adventurer'
        char_stype: '' if root.char is None else str(root.char.get_type()) + " Type"
        char_element: '' if root.char is None else str(root.char.get_element()).capitalize()
        char_display_name: '' if root.char is None else str(root.char.get_display_name())
        char_name: '' if root.char is None else str(root.char.get_name())
        skills_switch_text: root.skills_switch_text
        on_skills_switch: root.on_skills_switch()
        size_hint: app.get_dkey('cas.os.o s_h')
        pos_hint: app.get_dkey('cas.os p_h')
    RelativeLayoutBase:
        id: normal_layout
        size_hint: app.get_dkey('cas.os.o s_h')
        pos_hint: app.get_dkey('cas.os p_h')
        LabelBase:
            id: total_label
            text: 'Total Stats'
            font_name: '../res/fnt/Precious.ttf'
            height: self.texture_size[1]
            color: app.get_dkey('cas.tl c')
            font_size: app.get_dkey('cas.tl fs', root.width)
            size_hint: app.get_dkey('cas.tl s_h')
            pos_hint: app.get_dkey('cas.tl p_h')
        StatBox:
            id: stats
            font: '../res/fnt/Gabriola.ttf'
            health: 0 if root.char is None else root.char.get_health()
            mana: 0 if root.char is None else root.char.get_mana()
            phy_attack:  0 if root.char is None else root.char.get_phyatk()
            mag_attack: 0 if root.char is None else root.char.get_magatk()
            defense: 0 if root.char is None else root.char.get_defense()
            color: app.get_dkey('cas.sts c')
            number_color: app.get_dkey('cas.sts nc')
            size_hint: app.get_dkey('cas.sts s_h')
            pos_hint: app.get_dkey('cas.sts p_h')
        LabelBase:
            id: total_abilities
            text: 'Total Abilities'
            font_name: '../res/fnt/Precious.ttf'
            height: self.texture_size[1]
            color: app.get_dkey('cas.ta c')
            font_size: app.get_dkey('cas.ta fs', root.width)
            size_hint: app.get_dkey('cas.ta s_h')
            pos_hint: app.get_dkey('cas.ta p_h')
        AbilityStatBox:
            id: total_abilities_box
            font: '../res/fnt/Gabriola.ttf'
            strength: 0 if root.char is None else root.char.get_strength()
            strength_path: '' if root.char is None else root.char.get_strength_rank()
            magic: 0 if root.char is None else root.char.get_magic()
            magic_path: '' if root.char is None else root.char.get_magic_rank()
            endurance: 0 if root.char is None else root.char.get_endurance()
            endurance_path: '' if root.char is None else root.char.get_endurance_rank()
            dexterity: 0 if root.char is None else root.char.get_dexterity()
            dexterity_path: '' if root.char is None else root.char.get_dexterity_rank()
            agility: 0 if root.char is None else root.char.get_agility()
            agility_path: '' if root.char is None else root.char.get_agility_rank()
            color: app.get_dkey('cas.tab c')
            size_hint: app.get_dkey('cas.tab s_h')
            pos_hint: app.get_dkey('cas.tab p_h')
        LabelBase:
            id: rank_abilities
            text: 'Rank Abilities'
            font_name: '../res/fnt/Precious.ttf'
            height: self.texture_size[1]
            color: app.get_dkey('cas.ra c')
            font_size: app.get_dkey('cas.ra fs', root.width)
            size_hint: app.get_dkey('cas.ra s_h')
            pos_hint: app.get_dkey('cas.ra p_h')
        AbilityStatBox:
            id: rank_abilities_box
            font: '../res/fnt/Gabriola.ttf'
            strength: 0 if root.char is None else root.char.get_strength(root.char.get_current_rank())
            strength_path: '' if root.char is None else root.char.get_strength_rank(root.char.get_current_rank())
            magic: 0 if root.char is None else root.char.get_magic(root.char.get_current_rank())
            magic_path: '' if root.char is None else root.char.get_magic_rank(root.char.get_current_rank())
            endurance: 0 if root.char is None else root.char.get_endurance(root.char.get_current_rank())
            endurance_path: '' if root.char is None else root.char.get_endurance_rank(root.char.get_current_rank())
            dexterity: 0 if root.char is None else root.char.get_dexterity(root.char.get_current_rank())
            dexterity_path: '' if root.char is None else root.char.get_dexterity_rank(root.char.get_current_rank())
            agility: 0 if root.char is None else root.char.get_agility(root.char.get_current_rank())
            agility_path: '' if root.char is None else root.char.get_agility_rank(root.char.get_current_rank())
            color: app.get_dkey('cas.rab c')
            size_hint: app.get_dkey('cas.rab s_h')
            pos_hint: app.get_dkey('cas.rab p_h')
        ImageBase:
            id: neat_stat_overlay
            source: root.neat_stat_overlay_source
            size_hint: app.get_dkey('cas.nsl s_h')
            pos_hint: app.get_dkey('cas.nsl p_h')
        GridLayoutBase:
            id: neat_stat_layout
            rows: 3
            cols: 3
            size_hint: app.get_dkey('cas.nsl s_h')
            pos_hint: app.get_dkey('cas.nsl p_h')
            LabelBase:
                id: familia_label
                text: 'No Familia' if root.char is None else str(root.char.get_familia().get_name()) + " Familia"
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: score_label
                text: 'Score: 0' if root.char is None else "Score: " + str(root.char.get_score())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: floor_depth_label
                text: 'Floor Depth: 0' if root.char is None else "Floor Depth: " + str(root.char.get_floor_depth())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: race_label
                text: 'Race: None' if root.char is None else "Race: " + str(root.char.get_race())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: worth_label
                text: 'Worth: 0' if root.char is None else "Worth: " + str(root.char.get_worth())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: monsters_slain_label
                text: 'Monsters Slain: 0' if root.char is None else "Monsters Slain: " + str(root.char.get_monsters_killed())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: gender_label
                text: 'Gender: None' if root.char is None else "Gender: " + str(root.char.get_gender())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: high_dmg_label
                text: 'High Dmg.: 0' if root.char is None else "High Dmg.: " + str(root.char.get_high_dmg())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
            LabelBase:
                id: people_slain_label
                text: 'People Slain: 0' if root.char is None else "People Slain: " + str(root.char.get_people_killed())
                font_name: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.nsl c')
                font_size: app.get_dkey('cas.nsl fs', neat_stat_layout.height)
        GridLayoutBase:
            id: equipment_layout
            rows: 3
            cols: 3
            size_hint: app.get_dkey('cas.el s_h')
            padding: app.get_dkey('cas.el pad', overlay.width, overlay.height)
            spacing: app.get_dkey('cas.el spa', overlay.width, overlay.height)
            default_size_hint: app.get_dkey('cas.el ds_h')
            DisplayEquipmentSlot:
                id: weapon
                slot_name: "weapon"
                item: None if root.char is None else root.char.get_equipment().weapon
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: necklace
                item: None if root.char is None else root.char.get_equipment().necklace
                slot_name: 'necklace'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: ring
                item: None if root.char is None else root.char.get_equipment().ring
                slot_name: 'ring'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: helmet
                item: None if root.char is None else root.char.get_equipment().helmet
                slot_name: 'helmet'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: vambraces
                item: None if root.char is None else root.char.get_equipment().vambraces
                slot_name: 'vambraces'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: gloves
                item: None if root.char is None else root.char.get_equipment().gloves
                slot_name: 'gloves'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: chest
                item: None if root.char is None else root.char.get_equipment().chest
                slot_name: 'chest'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: grieves
                item: None if root.char is None else root.char.get_equipment().grieves
                slot_name: 'grieves'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
            DisplayEquipmentSlot:
                id: boots
                item: None if root.char is None else root.char.get_equipment().boots
                slot_name: 'boots'
                font: '../res/fnt/Gabriola.ttf'
                color: app.get_dkey('cas.el c')
    RelativeLayoutBase:
        id: skill_layout
        opacity: 0
        size_hint: app.get_dkey('cas.os.o s_h')
        pos_hint: app.get_dkey('cas.os p_h')
        SkillsList:
            id: skillslist
            height_unit: skill_layout.height
            size_hint: app.get_dkey('cas.scrl s_h')
            pos_hint: app.get_dkey('cas.scrl p_h')
    HTButton:
        id: change_equip
        opacity: 1
        path: '../res/screens/buttons/long_stat'
        text: 'Change Equip'
        font_name: '../res/fnt/Gabriola.ttf'
        label_color: app.get_dkey('cas.ceb lc')
        font_size: app.get_dkey('cas.ceb fs', root.height)
        size_hint: app.get_dkey('cas.ceb s_h')
        pos_hint: app.get_dkey('cas.ceb p_h')
        on_release: root.on_change_equip()
    HTButton:
        id: status_board
        path: '../res/screens/buttons/long_stat'
        text: 'Status Board'
        font_name: '../res/fnt/Gabriola.ttf'
        label_color: app.get_dkey('cas.sbb lc')
        font_size: app.get_dkey('cas.sbb fs', root.height)
        size_hint: app.get_dkey('cas.sbb s_h')
        pos_hint: app.get_dkey('cas.sbb p_h')
        on_release: root.on_status_board()
    HTButton:
        id: image_preview
        path: '../res/screens/buttons/preview'
        size_hint: app.get_dkey('cas.ipb s_h')
        pos_hint: app.get_dkey('cas.ipb p_h')
        on_release: root.on_image_preview()
    ImageBase:
        id: star_1
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(1).broken else '../res/screens/stats/star.png' if root.char.get_rank(1).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(1).unlocked else 0
        size_hint: app.get_dkey('cas.star_1 s_h')
        pos_hint: app.get_dkey('cas.star_1 p_h')
    ImageBase:
        id: star_2
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(2).broken else '../res/screens/stats/star.png' if root.char.get_rank(2).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(2).unlocked else 0
        size_hint: app.get_dkey('cas.star_2 s_h')
        pos_hint: app.get_dkey('cas.star_2 p_h')
    ImageBase:
        id: star_3
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(3).broken else '../res/screens/stats/star.png' if root.char.get_rank(3).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(3).unlocked else 0
        size_hint: app.get_dkey('cas.star_3 s_h')
        pos_hint: app.get_dkey('cas.star_3 p_h')
    ImageBase:
        id: star_4
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(4).broken else '../res/screens/stats/star.png' if root.char.get_rank(4).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(4).unlocked else 0
        size_hint: app.get_dkey('cas.star_4 s_h')
        pos_hint: app.get_dkey('cas.star_4 p_h')
    ImageBase:
        id: star_5
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(5).broken else '../res/screens/stats/star.png' if root.char.get_rank(5).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(5).unlocked else 0
        size_hint: app.get_dkey('cas.star_5 s_h')
        pos_hint: app.get_dkey('cas.star_5 p_h')
    ImageBase:
        id: star_6
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(6).broken else '../res/screens/stats/star.png' if root.char.get_rank(6).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(6).unlocked else 0
        size_hint: app.get_dkey('cas.star_6 s_h')
        pos_hint: app.get_dkey('cas.star_6 p_h')
    ImageBase:
        id: star_7
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(7).broken else '../res/screens/stats/star.png' if root.char.get_rank(7).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(7).unlocked else 0
        size_hint: app.get_dkey('cas.star_7 s_h')
        pos_hint: app.get_dkey('cas.star_7 p_h')
    ImageBase:
        id: star_8
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(8).broken else '../res/screens/stats/star.png' if root.char.get_rank(8).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(8).unlocked else 0
        size_hint: app.get_dkey('cas.star_8 s_h')
        pos_hint: app.get_dkey('cas.star_8 p_h')
    ImageBase:
        id: star_9
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(9).broken else '../res/screens/stats/star.png' if root.char.get_rank(9).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(9).unlocked else 0
        size_hint: app.get_dkey('cas.star_9 s_h')
        pos_hint: app.get_dkey('cas.star_9 p_h')
    ImageBase:
        id: star_10
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(10).broken else '../res/screens/stats/star.png' if root.char.get_rank(10).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(10).unlocked else 0
        size_hint: app.get_dkey('cas.star_10 s_h')
        pos_hint: app.get_dkey('cas.star_10 p_h')

<StatInfoBox>:
    ImageBase:
        id: flag
        source: root.flag_source
        allow_stretch: True
        size_hint: app.get_dkey("cas.flg s_h")
        pos_hint: app.get_dkey("cas.flg p_h")
    LabelBase:
        id: flag_label
        text: root.char_type
        font_name: '../res/fnt/Gabriola.ttf'
        height: self.texture_size[1]
        color: app.get_dkey("cas.flgl c")
        font_size: app.get_dkey("cas.flgl fs", flag.height)
        size_hint: app.get_dkey("cas.flgl s_h")
        pos_hint: app.get_dkey("cas.flgl p_h")
    ImageBase:
        id: type_flag
        source: root.type_flag_source
        allow_stretch: True
        size_hint: app.get_dkey("cas.tflg s_h")
        pos_hint: app.get_dkey("cas.tflg p_h")
    LabelBase:
        id: type_label
        text: root.char_stype
        font_name: '../res/fnt/Gabriola.ttf'
        height: self.texture_size[1]
        color: app.get_dkey("cas.tflgl c")
        font_size: app.get_dkey("cas.tflgl fs", type_flag.height)
        size_hint: app.get_dkey("cas.tflgl s_h")
        pos_hint: app.get_dkey("cas.tflgl p_h")
    ImageBase:
        id: element_flag
        source: root.element_flag_source
        allow_stretch: True
        size_hint: app.get_dkey("cas.eflg s_h")
        pos_hint: app.get_dkey("cas.eflg p_h")
    LabelBase:
        id: element_flag_label
        text: root.char_element
        font_name: '../res/fnt/Gabriola.ttf'
        size: self.texture_size
        color: app.get_dkey("cas.eflgl c")
        font_size: app.get_dkey("cas.eflgl fs", element_flag.width)
        pos_hint: app.get_dkey("cas.eflgl p_h")
        canvas.before:
            PushMatrix
            Rotate:
                angle: app.get_dkey("cas.eflgl ang")
                origin: self.center
        canvas.after:
            PopMatrix
    ImageBase:
        id: element_flag_image
        source: root.element_flag_image_source
        allow_stretch: True
        size_hint: app.get_dkey("cas.eflgi s_h")
        pos_hint: app.get_dkey("cas.eflgi p_h")
    HTButton:
        id: skills_switch
        path: '../res/screens/buttons/skills_button'
        text: root.skills_switch_text
        font_name: '../res/fnt/Gabriola.ttf'
        label_color: app.get_dkey('cas.sk lc')
        label_padding: app.get_dkey('cas.sk lp', self.width)
        font_size: app.get_dkey('cas.sk fs', root.height)
        size_hint: app.get_dkey('cas.sk s_h')
        pos_hint: app.get_dkey('cas.sk p_h')
        on_release: root.dispatch('on_skills_switch')
    LabelBase:
        id: display_name_label
        text: root.char_display_name
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey("cas.dnl c")
        font_size: app.get_dkey("cas.dnl fs", root.width)
        size_hint: app.get_dkey("cas.dnl s_h")
        pos_hint: app.get_dkey("cas.dnl p_h")
    LabelBase:
        id: name_label
        text: root.char_name
        font_name: '../res/fnt/Precious.ttf'
        size: self.texture_size
        color: app.get_dkey("cas.nl c")
        font_size: app.get_dkey("cas.nl fs", root.width)
        size_hint: app.get_dkey("cas.nl s_h")
        pos_hint: app.get_dkey("cas.nl p_h")
    ImageBase:
        id: overlay_bar
        source: root.overlay_bar_source
        allow_stretch: True
        size_hint: app.get_dkey("cas.ob s_h")
        pos_hint: app.get_dkey("cas.ob p_h")


<SkillLabel>:
    ImageBase:
        id: image
        source: '../res/screens/attribute/attribute_box.png'
        keep_ratio: False
        allow_stretch: True
    LabelBase:
        id: title
        size_hint: None, None
        size: self.texture_size
        pos_hint: {'center_y': 0.8975, 'x': 0.025}
        markup: True
        font_size: root.height * 0.175
        font_name: '../res/fnt/Gabriola.ttf'
        color: 0, 0, 0, 1
        text: '[b]' + root.title + '[/b]'
    LabelBase:
        id: body
        valign: 'top'
        halign: 'left'
        size_hint: 0.95, 0.73
        pos_hint: {'x': 0.025, 'y': 0.01}
        text_size: self.size
        font_size: root.height * 0.15
        color: 0, 0, 0, 1
        font_name: '../res/fnt/Gabriola.ttf'
        text: root.body

<AttackLabel>:
    ImageBase:
        id: image
        source: '../res/screens/attribute/attribute_box.png'
        keep_ratio: False
        allow_stretch: True
    ImageBase:
        id: image
        size_hint: 0.06, 0.2
        pos_hint: {'x': 0.01, 'top': 0.98}
        keep_ratio: True
        source: root.type_source
    LabelBase:
        id: title
        size_hint: None, None
        size: self.texture_size
        pos_hint: {'center_y': 0.8975, 'x': 0.0825}
        markup: True
        font_size: root.height * 0.175
        font_name: '../res/fnt/Gabriola.ttf'
        color: 0, 0, 0, 1
        text: '[b]' + root.title + '[/b]'
    LabelBase:
        id: costs
        size_hint: None, None
        size: self.texture_size
        pos_hint: {'center_y': 0.8975, 'right': 0.9675}
        markup: True
        font_size: root.height * 0.15
        font_name: '../res/fnt/Gabriola.ttf'
        color: 0, 0, 0, 1
        text: '[b]' + root.cost + '[/b]'
    LabelBase:
        id: body
        valign: 'top'
        halign: 'left'
        size_hint: 0.95, 0.73
        pos_hint: {'x': 0.025, 'y': 0.01}
        text_size: self.size
        font_size: root.height * 0.15
        color: 0, 0, 0, 1
        font_name: '../res/fnt/Gabriola.ttf'
        text: root.body

<StatBox>:
    #Health
    ImageBase:
        id: bar_health
        source: root.stat_bar_source
        allow_stretch: True
        keep_ratio: False
        size_hint: app.get_dkey('ssb.bar s_h')
        pos_hint: app.get_dkey('ssb.hea.bar p_h')
    ImageBase:
        id: image_health
        source: root.health_source
        allow_stretch: True
        size_hint: app.get_dkey('ssb.img s_h')
        pos_hint: app.get_dkey('ssb.hea.img p_h')
    LabelBase:
        id: label_health
        text: 'Health'
        color: root.color
        font_name: root.font
        font_size: image_health.height
        height: self.texture_size[1]
        size_hint: app.get_dkey('ssb.lbl s_h')
        pos_hint: app.get_dkey('ssb.hea.lbl p_h')
    LabelBase:
        id: label_health_number
        text: str(round(root.health, 2))
        color: root.number_color
        font_name: root.font
        font_size: image_health.height
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('ssb.hea.num p_h')
    #Mana
    ImageBase:
        id: bar_mana
        source: root.stat_bar_source
        allow_stretch: True
        keep_ratio: False
        size_hint: app.get_dkey('ssb.bar s_h')
        pos_hint: app.get_dkey('ssb.man.bar p_h')
    ImageBase:
        id: image_mana
        source: root.mana_source
        allow_stretch: True
        size_hint: app.get_dkey('ssb.img s_h')
        pos_hint: app.get_dkey('ssb.man.img p_h')
    LabelBase:
        id: label_mana
        text: 'Mana'
        color: root.color
        font_name: root.font
        font_size: image_mana.height
        height: self.texture_size[1]
        size_hint: app.get_dkey('ssb.lbl s_h')
        pos_hint: app.get_dkey('ssb.man.lbl p_h')
    LabelBase:
        id: label_mana_number
        text: str(round(root.mana, 2))
        color: root.number_color
        font_name: root.font
        font_size: image_mana.height
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('ssb.man.num p_h')
    #Phy. Attack
    ImageBase:
        id: bar_phy_attack
        source: root.stat_bar_source
        allow_stretch: True
        keep_ratio: False
        size_hint: app.get_dkey('ssb.bar s_h')
        pos_hint: app.get_dkey('ssb.phy.bar p_h')
    ImageBase:
        id: image_phy_attack
        source: root.phy_attack_source
        allow_stretch: True
        size_hint: app.get_dkey('ssb.img s_h')
        pos_hint: app.get_dkey('ssb.phy.img p_h')
    LabelBase:
        id: label_phy_attack
        text: 'Phy. Atk'
        color: root.color
        font_name: root.font
        font_size: image_phy_attack.height
        height: self.texture_size[1]
        size_hint: app.get_dkey('ssb.lbl s_h')
        pos_hint: app.get_dkey('ssb.phy.lbl p_h')
    LabelBase:
        id: label_phy_attack_number
        text: str(round(root.phy_attack, 2))
        color: root.number_color
        font_name: root.font
        font_size: image_phy_attack.height
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('ssb.phy.num p_h')
    #Mag. Attack
    ImageBase:
        id: bar_mag_attack
        source: root.stat_bar_source
        allow_stretch: True
        keep_ratio: False
        size_hint: app.get_dkey('ssb.bar s_h')
        pos_hint: app.get_dkey('ssb.mag.bar p_h')
    ImageBase:
        id: image_mag_attack
        source: root.mag_attack_source
        allow_stretch: True
        size_hint: app.get_dkey('ssb.img s_h')
        pos_hint: app.get_dkey('ssb.mag.img p_h')
    LabelBase:
        id: label_mag_attack
        text: 'Mag. Atk'
        color: root.color
        font_name: root.font
        font_size: image_mag_attack.height
        height: self.texture_size[1]
        size_hint: app.get_dkey('ssb.lbl s_h')
        pos_hint: app.get_dkey('ssb.mag.lbl p_h')
    LabelBase:
        id: label_mag_attack_number
        text: str(round(root.mag_attack, 2))
        color: root.number_color
        font_name: root.font
        font_size: image_mag_attack.height
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('ssb.mag.num p_h')
    #Defense
    ImageBase:
        id: bar_defense
        source: root.stat_bar_source
        allow_stretch: True
        keep_ratio: False
        size_hint: app.get_dkey('ssb.bar s_h')
        pos_hint: app.get_dkey('ssb.def.bar p_h')
    ImageBase:
        id: image_defense
        source: root.defense_source
        allow_stretch: True
        size_hint: app.get_dkey('ssb.img s_h')
        pos_hint: app.get_dkey('ssb.def.img p_h')
    LabelBase:
        id: label_defense
        text: 'Defense'
        color: root.color
        font_name: root.font
        font_size: image_defense.height
        height: self.texture_size[1]
        size_hint: app.get_dkey('ssb.lbl s_h')
        pos_hint: app.get_dkey('ssb.def.lbl p_h')
    LabelBase:
        id: label_defense_number
        text: str(round(root.defense, 2))
        color: root.number_color
        font_name: root.font
        font_size: image_defense.height
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('ssb.def.num p_h')

<AbilityStatBox>:
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
        keep_ratio: False
    LabelBase:
        id: strength_label
        text: 'Strength'
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        size_hint: app.get_dkey('asb.lbl s_h')
        pos_hint: app.get_dkey('asb.str.lbl p_h')
        font_size: app.get_dkey('asb.lbl fs', root.height)
    ImageBase:
        id: strength_image
        source: root.strength_path
        allow_stretch: True
        size_hint: app.get_dkey('asb.img s_h')
        pos_hint: app.get_dkey('asb.str.img p_h')
    LabelBase:
        id: strength_label_number
        text: str(round(root.strength, 2))
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        width: self.texture_size[0]
        size_hint: app.get_dkey('asb.num s_h')
        pos_hint: app.get_dkey('asb.str.num p_h')
        font_size: app.get_dkey('asb.num fs', root.height)
    LabelBase:
        id: magic_label
        text: 'Magic'
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        size_hint: app.get_dkey('asb.lbl s_h')
        pos_hint: app.get_dkey('asb.mag.lbl p_h')
        font_size: app.get_dkey('asb.lbl fs', root.height)
    ImageBase:
        id: magic_image
        source: root.magic_path
        allow_stretch: True
        size_hint: app.get_dkey('asb.img s_h')
        pos_hint: app.get_dkey('asb.mag.img p_h')
    LabelBase:
        id: magic_label_number
        text: str(round(root.magic, 2))
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        width: self.texture_size[0]
        size_hint: app.get_dkey('asb.num s_h')
        pos_hint: app.get_dkey('asb.mag.num p_h')
        font_size: app.get_dkey('asb.num fs', root.height)
    LabelBase:
        id: endurance_label
        text: 'Endurance'
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        size_hint: app.get_dkey('asb.lbl s_h')
        pos_hint: app.get_dkey('asb.end.lbl p_h')
        font_size: app.get_dkey('asb.lbl fs', root.height)
    ImageBase:
        id: endurance_image
        source: root.endurance_path
        allow_stretch: True
        size_hint: app.get_dkey('asb.img s_h')
        pos_hint: app.get_dkey('asb.end.img p_h')
    LabelBase:
        id: endurance_label_number
        text: str(round(root.endurance, 2))
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        width: self.texture_size[0]
        size_hint: app.get_dkey('asb.num s_h')
        pos_hint: app.get_dkey('asb.end.num p_h')
        font_size: app.get_dkey('asb.num fs', root.height)
    LabelBase:
        id: dexterity_label
        text: 'Dexterity'
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        size_hint: app.get_dkey('asb.lbl s_h')
        pos_hint: app.get_dkey('asb.dex.lbl p_h')
        font_size: app.get_dkey('asb.lbl fs', root.height)
    ImageBase:
        id: dexterity_image
        source: root.dexterity_path
        allow_stretch: True
        size_hint: app.get_dkey('asb.img s_h')
        pos_hint: app.get_dkey('asb.dex.img p_h')
    LabelBase:
        id: dexterity_label_number
        text: str(round(root.dexterity, 2))
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        width: self.texture_size[0]
        size_hint: app.get_dkey('asb.num s_h')
        pos_hint: app.get_dkey('asb.dex.num p_h')
        font_size: app.get_dkey('asb.num fs', root.height)
    LabelBase:
        id: agility_label
        text: 'Agility'
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        size_hint: app.get_dkey('asb.lbl s_h')
        pos_hint: app.get_dkey('asb.agi.lbl p_h')
        font_size: app.get_dkey('asb.lbl fs', root.height)
    ImageBase:
        id: agility_image
        source: root.agility_path
        allow_stretch: True
        size_hint: app.get_dkey('asb.img s_h')
        pos_hint: app.get_dkey('asb.agi.img p_h')
    LabelBase:
        id: agility_label_number
        text: str(round(root.agility, 2))
        color: root.color
        outline_width: 1
        outline_color: 0, 0, 0, 1
        font_name: root.font
        width: self.texture_size[0]
        size_hint: app.get_dkey('asb.num s_h')
        pos_hint: app.get_dkey('asb.agi.num p_h')
        font_size: app.get_dkey('asb.num fs', root.height)

<DurabilityBar>:
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
        keep_ratio: False
        opacity: root.opacity
    StencilViewBase:
        id: clip
        size_hint: root.value / float(root.max), 1
        ImageBase:
            id: foreground
            source: root.foreground_source
            allow_stretch: True
            size_hint: None, None
            size: root.size
            keep_ratio: False
            opacity: root.opacity

<SkillsList>:
    id: scroll
    RelativeLayoutBase:
        id: divider
        height: combat_skills.minimum_height if combat_skills.minimum_height > development_abilities.minimum_height else development_abilities.minimum_height
        size_hint_y: None
        GridLayoutBase:
            id: combat_skills
            height: self.minimum_height
            pos_hint: {'x': 0, 'top': 1}
            size_hint: 0.5, None
            cols: 1
            spacing: 10
            padding: 10
            LabelBase:
                font_name: '../res/fnt/Precious.ttf'
                text: 'Combat Skills'
                color: 0, 0, 0, 1
                font_size: app.get_dkey('cas.cbs.tit1 fs', root.height)
                size_hint_y: None
                height: self.texture_size[1]
            AttackLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                type_source: '../res/screens/attribute/water.png'
                title: 'Ravage Dance'
                cost: 'MP 43'
                body: '[Foes] Super Water M.Attack w/ temp Mag. Boost & Ultra Penetration Rate'
            AttackLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                type_source: '../res/screens/attribute/water.png'
                title: 'Kaleidoscopic Dance'
                cost: 'MP 32'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
        GridLayoutBase:
            id: development_abilities
            height: self.minimum_height
            size_hint: 0.5, None
            pos_hint: {'x': 0.5, 'top': 1}
            cols: 1
            spacing: 10
            padding: 10
            LabelBase:
                font_name: '../res/fnt/Precious.ttf'
                text: 'Abilities'
                color: 0, 0, 0, 1
                font_size: app.get_dkey('cas.dab.tit1 fs', root.height)
                size_hint_y: None
                height: self.texture_size[1]
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Immunity: I'
                body: '50% Poison Resistance\n'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title_font_size: root.height * 0.0375
                body_font_size: root.height * 0.0225
                title: 'Bloom: I'
                body: '3% HP & Mana Regen per turn\n+10% penetration on counter and +10% critical on successful penetration'
            SkillLabel:
                size_hint: 1, None
                height: 0.150 * root.height_unit
                title: 'Hunter: I'
                body: '+15% str. against monsters you have defeated more than 100 times\n'

<StatusBoardManager>:
    name: 'status_Board_unassigned' if root.char is None else 'status_board_' + str(root.char.get_name())
    animate_distance: app.get_dkey('sbm.a ad', self.width)
    animate_start_left: app.get_dkey('sbm.a a_s_l', self.width)
    animate_start_right: app.get_dkey('sbm.a a_s_r', self.width)
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()
    ImageBase:
        id: familia_mark
        source: '' if root.char is None else '../res/familias/marks/Takemikazuchi.png'
        size_hint: app.get_dkey('sbm.sbs s_h')
        pos_hint: app.get_dkey('sbm.sbs p_h')
    DragSnapWidget:
        id: status_board_screen
        manager: root
        on_change: root.on_board_move(self.index)
        size_hint: app.get_dkey('sbm.sbs s_h')
        pos_hint: app.get_dkey('sbm.sbs p_h')
    LabelBase:
        id: board_name
        text: root.current_board_name
        halign: "center"
        markup: True
        color: 0, 0, 0, 1
        font_name: '../res/fnt/Precious.ttf'
        size_hint: app.get_dkey('sbm.bn s_h')
        font_size: app.get_dkey('sbm.bn fs', root.height)
        pos_hint: app.get_dkey('sbm.bn p_h')
    HTButton:
        id: available_falna
        path: '../res/screens/buttons/long_stat'
        text: 'Available Falna'
        font_name: '../res/fnt/Gabriola.ttf'
        label_color: app.get_dkey('sbm.afb lc')
        font_size: app.get_dkey('sbm.afb fs', root.height)
        size_hint: app.get_dkey('sbm.afb s_h')
        pos_hint: app.get_dkey('sbm.afb p_h')
    HTButton:
        id: unlock_all
        path: '../res/screens/buttons/long_stat'
        text: 'Unlock All'
        font_name: '../res/fnt/Gabriola.ttf'
        label_color: app.get_dkey('sbm.uab lc')
        font_size: app.get_dkey('sbm.uab fs', root.height)
        size_hint: app.get_dkey('sbm.uab s_h')
        pos_hint: app.get_dkey('sbm.uab p_h')
    ImageBase:
        id: overlay_background
        source: root.overlay_background_source
        allow_stretch: True
        size_hint: app.get_dkey('sbm.os.ob s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    ImageBase:
        id: overlay
        source: root.overlay_source
        allow_stretch: True
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    StatInfoBox:
        id: persistent_layout
        type_flag_source: '' if root.char is None else "../res/screens/recruit/" + str(root.char.get_type()).lower() + "_flag.png"
        element_flag_source: '' if root.char is None else "../res/screens/attribute/" + root.char.get_element().lower() + "_flag.png"
        element_flag_image_source: '' if root.char is None else "../res/screens/attribute/" + root.char.get_element().lower() + ".png"
        char_type: '' if root.char is None else 'Supporter' if root.char.is_support() else 'Adventurer'
        char_stype: '' if root.char is None else str(root.char.get_type()) + " Type"
        char_element: '' if root.char is None else str(root.char.get_element()).capitalize()
        char_display_name: '' if root.char is None else str(root.char.get_display_name())
        char_name: '' if root.char is None else str(root.char.get_name())
        skills_switch_text: root.skills_switch_text
        on_skills_switch: root.on_skills_switch()
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
    RelativeLayoutBase:
        id: normal_layout
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
        HTButton:
            id: upgrade_combat_skills
            path: '../res/screens/buttons/status_board_ability'
            text: 'Upgrade\nCombat Skills'
            label_halign: "center"
            label_valign: "middle"
            label_color: app.get_dkey('sbm.ucsb lc')
            font_name: '../res/fnt/Precious.ttf'
            font_size: app.get_dkey('sbm.ucsb fs', root.height)
            size_hint: app.get_dkey('sbm.ucsb s_h')
            pos_hint: app.get_dkey('sbm.ucsb p_h')
        HTButton:
            id: view_all_abilities
            path: '../res/screens/buttons/status_board_ability'
            text: 'View All\nAbilities'
            halign: "center"
            valign: "middle"
            label_color: app.get_dkey('sbm.vaab lc')
            font_name: '../res/fnt/Precious.ttf'
            font_size: app.get_dkey('sbm.vaab fs', root.height)
            size_hint: app.get_dkey('sbm.vaab s_h')
            pos_hint: app.get_dkey('sbm.vaab p_h')
        LabelBase:
            id: total_label
            text: 'Total Stats'
            font_name: '../res/fnt/Precious.ttf'
            height: self.texture_size[1]
            color: app.get_dkey('sbm.tl c')
            font_size: app.get_dkey('sbm.tl fs', root.width)
            size_hint: app.get_dkey('sbm.tl s_h')
            pos_hint: app.get_dkey('sbm.tl p_h')
        StatBox:
            id: stats
            font: '../res/fnt/Gabriola.ttf'
            health: 0 if root.char is None else root.char.get_health()
            mana: 0 if root.char is None else root.char.get_mana()
            phy_attack:  0 if root.char is None else root.char.get_phyatk()
            mag_attack: 0 if root.char is None else root.char.get_magatk()
            defense: 0 if root.char is None else root.char.get_defense()
            color: app.get_dkey('sbm.sts c')
            number_color: app.get_dkey('sbm.sts nc')
            size_hint: app.get_dkey('sbm.sts s_h')
            pos_hint: app.get_dkey('sbm.sts p_h')
        LabelBase:
            id: total_abilities
            text: 'Total Abilities'
            font_name: '../res/fnt/Precious.ttf'
            height: self.texture_size[1]
            color: app.get_dkey('sbm.ta c')
            font_size: app.get_dkey('sbm.ta fs', root.width)
            size_hint: app.get_dkey('sbm.ta s_h')
            pos_hint: app.get_dkey('sbm.ta p_h')
        AbilityStatBox:
            id: total_abilities_box
            font: '../res/fnt/Gabriola.ttf'
            strength: 0 if root.char is None else root.char.get_strength()
            strength_path: '' if root.char is None else root.char.get_strength_rank()
            magic: 0 if root.char is None else root.char.get_magic()
            magic_path: '' if root.char is None else root.char.get_magic_rank()
            endurance: 0 if root.char is None else root.char.get_endurance()
            endurance_path: '' if root.char is None else root.char.get_endurance_rank()
            dexterity: 0 if root.char is None else root.char.get_dexterity()
            dexterity_path: '' if root.char is None else root.char.get_dexterity_rank()
            agility: 0 if root.char is None else root.char.get_agility()
            agility_path: '' if root.char is None else root.char.get_agility_rank()
            color: app.get_dkey('sbm.tab c')
            size_hint: app.get_dkey('sbm.tab s_h')
            pos_hint: app.get_dkey('sbm.tab p_h')
    RelativeLayoutBase:
        id: skill_layout
        opacity: 0
        size_hint: app.get_dkey('sbm.os.o s_h')
        pos_hint: app.get_dkey('sbm.os p_h')
        SkillsList:
            id: skillslist
            height_unit: skill_layout.height
            size_hint: app.get_dkey('sbm.scrl s_h')
            pos_hint: app.get_dkey('sbm.scrl p_h')
    ImageBase:
        id: star_1
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(1).broken else '../res/screens/stats/star.png' if root.char.get_rank(1).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(1).unlocked else 0
        size_hint: app.get_dkey('sbm.star_1 s_h')
        pos_hint: app.get_dkey('sbm.star_1 p_h')
    ImageBase:
        id: star_2
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(2).broken else '../res/screens/stats/star.png' if root.char.get_rank(2).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(2).unlocked else 0
        size_hint: app.get_dkey('sbm.star_2 s_h')
        pos_hint: app.get_dkey('sbm.star_2 p_h')
    ImageBase:
        id: star_3
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(3).broken else '../res/screens/stats/star.png' if root.char.get_rank(3).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(3).unlocked else 0
        size_hint: app.get_dkey('sbm.star_3 s_h')
        pos_hint: app.get_dkey('sbm.star_3 p_h')
    ImageBase:
        id: star_4
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(4).broken else '../res/screens/stats/star.png' if root.char.get_rank(4).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(4).unlocked else 0
        size_hint: app.get_dkey('sbm.star_4 s_h')
        pos_hint: app.get_dkey('sbm.star_4 p_h')
    ImageBase:
        id: star_5
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(5).broken else '../res/screens/stats/star.png' if root.char.get_rank(5).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(5).unlocked else 0
        size_hint: app.get_dkey('sbm.star_5 s_h')
        pos_hint: app.get_dkey('sbm.star_5 p_h')
    ImageBase:
        id: star_6
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(6).broken else '../res/screens/stats/star.png' if root.char.get_rank(6).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(6).unlocked else 0
        size_hint: app.get_dkey('sbm.star_6 s_h')
        pos_hint: app.get_dkey('sbm.star_6 p_h')
    ImageBase:
        id: star_7
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(7).broken else '../res/screens/stats/star.png' if root.char.get_rank(7).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(7).unlocked else 0
        size_hint: app.get_dkey('sbm.star_7 s_h')
        pos_hint: app.get_dkey('sbm.star_7 p_h')
    ImageBase:
        id: star_8
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(8).broken else '../res/screens/stats/star.png' if root.char.get_rank(8).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(8).unlocked else 0
        size_hint: app.get_dkey('sbm.star_8 s_h')
        pos_hint: app.get_dkey('sbm.star_8 p_h')
    ImageBase:
        id: star_9
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(9).broken else '../res/screens/stats/star.png' if root.char.get_rank(9).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(9).unlocked else 0
        size_hint: app.get_dkey('sbm.star_9 s_h')
        pos_hint: app.get_dkey('sbm.star_9 p_h')
    ImageBase:
        id: star_10
        source: '' if root.char is None else '../res/screens/stats/rankbrk.png' if root.char.get_rank(10).broken else '../res/screens/stats/star.png' if root.char.get_rank(10).unlocked else ''
        allow_stretch: True
        opacity: 0 if root.char is None else 1 if root.char.get_rank(10).unlocked else 0
        size_hint: app.get_dkey('sbm.star_10 s_h')
        pos_hint: app.get_dkey('sbm.star_10 p_h')
    HTButton:
        id: left_arrow
        path: '../res/screens/buttons/ArrowLeft'
        size_hint: app.get_dkey('sbm.la s_h')
        pos_hint: app.get_dkey('sbm.la p_h')
        x: root.animate_start_left
        on_release: root.on_arrow_touch(True)
    HTButton:
        id: right_arrow
        path: '../res/screens/buttons/ArrowRight'
        size_hint: app.get_dkey('sbm.ra s_h')
        pos_hint: app.get_dkey('sbm.ra p_h')
        x: root.animate_start_right
        on_release: root.on_arrow_touch(False)

<ImagePreview>:
    name: 'image_preview_unassigned' if root.char is None else 'image_preview_' + str(root.char.get_name())
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
    ImageBase:
        id: char_image
        source: '' if root.char is None else root.char.full_image_source
        allow_stretch: True
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()

<EquipmentChange>:
    name: 'equipment_change_unassigned' if root.char is None else 'equipment_change_' + str(root.char.get_name())

    weapon: None if root.char is None else root.char.get_equipment().weapon
    helmet: None if root.char is None else root.char.get_equipment().helmet
    chest: None if root.char is None else root.char.get_equipment().chest
    grieves: None if root.char is None else root.char.get_equipment().grieves
    boots: None if root.char is None else root.char.get_equipment().boots
    vambraces: None if root.char is None else root.char.get_equipment().vambraces
    gloves: None if root.char is None else root.char.get_equipment().gloves
    necklace: None if root.char is None else root.char.get_equipment().necklace
    ring: None if root.char is None else root.char.get_equipment().ring

    DetailEquipmentSlot:
        id: chest
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.che p_h')
        slot_name: 'Chest'
        item: root.chest
    DetailEquipmentSlot:
        id: vambraces
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.vam p_h')
        slot_name: 'Vambraces'
        item: root.vambraces
    DetailEquipmentSlot:
        id: grieves
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.gre p_h')
        slot_name: 'Grieves'
        item: root.grieves
    DetailEquipmentSlot:
        id: helmet
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.hel p_h')
        slot_name: 'Helmet'
        item: root.helmet
    DetailEquipmentSlot:
        id: boots
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.bot p_h')
        slot_name: 'Boots'
        item: root.boots
    DetailEquipmentSlot:
        id: weapon
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.wep p_h')
        slot_name: 'Weapon'
        item: root.weapon
    DetailEquipmentSlot:
        id: gloves
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.glo p_h')
        slot_name: 'Gloves'
        item: root.gloves
    DetailEquipmentSlot:
        id: necklace
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.nek p_h')
        slot_name: 'Necklace'
        item: root.necklace
    DetailEquipmentSlot:
        id: ring
        size_hint: app.get_dkey('ecs.slo s_h')
        pos_hint: app.get_dkey('ecs.slo.rng p_h')
        slot_name: 'Ring'
        item: root.ring
#    ImageBase:
#        id: shadow
#        source: '../res/characters/test/badass_ais/portrait_shadow.png'
#        size_hint: app.get_dkey('ecs.por s_h')
#        pos_hint: app.get_dkey('ecs.por p_h')
#        allow_stretch: True
    ImageBase:
        id: portrait
        source: '../res/characters/test/badass_ais/portrait.png'
        size_hint:app.get_dkey('ecs.por s_h')
        pos_hint: app.get_dkey('ecs.por p_h')
        allow_stretch: True
    HTButton:
        id: back_button
        path: '../res/screens/buttons/back'
        size_hint: app.get_dkey('bb s_h')
        pos_hint: app.get_dkey('bb p_h')
        on_release: root.on_back_press()

<DisplayEquipmentSlot>:
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
#    LabelBase:
#        id: label
#        text: str(root.slot_name).capitalize()
#        color: root.color
#        font_name: root.font
#        size: self.texture_size
#        size_hint: app.get_dkey('eqs.lbl s_h')
#        font_size: app.get_dkey('eqs.lbl fs', root.height)
#        pos_hint: app.get_dkey('eqs.lbl p_h')
    HTButton:
        id: detail_equip
        opacity: 0
        collide_image: '../res/screens/buttons/equipment.collision.png'
        size_hint: app.get_dkey('deqs.butt s_h')
        pos_hint: app.get_dkey('deqs.butt p_h')
        on_release: print('touched' + str(root.slot_name))
    LabelBase:
        id: label_equip
        text: 'Not equipped' if root.item is None else root.item.get_name().capitalize()
        color: root.color
        font_name: root.font
        size_hint: app.get_dkey('deqs.lble.one s_h') if root.item is None else app.get_dkey('deqs.lble.two s_h')
        font_size: app.get_dkey('deqs.lble fs', root.height)
        pos_hint: app.get_dkey('deqs.lble.one p_h') if root.item is None else app.get_dkey('deqs.lble.two p_h')
    ImageBase:
        id: image_equip
        source: '../res/items/equipment/empty.png' if root.item is None else '../res/items/equipment/' + root.item.get_id() + '.png'
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deqs.imge s_h')
        pos_hint: app.get_dkey('deqs.imge p_h')
    DurabilityBar:
        max: 100 if root.item is None else root.item.get_durability()
        value: 0 if root.item is None else root.item.get_durability_current()
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deqs.dbb s_h')
        pos_hint: app.get_dkey('deqs.dbb p_h')

<DetailEquipmentSlot>:
    ImageBase:
        id: background
        source: root.background_source
        allow_stretch: True
    LabelBase:
        id: slot_name
        text: '[b]' + str(root.slot_name).capitalize() + '[/b]'
        markup: True
        font_name: '../res/fnt/Gabriola.ttf'
        font_size: app.get_dkey('deteqs.lbl fs', self.height)
        color: app.get_dkey('deteqs.lbl c')
        size_hint: app.get_dkey('deteqs.lbl s_h')
        width: self.texture_size[0]
        pos_hint: app.get_dkey('deteqs.lbl p_h')
    ImageBase:
        id: type
        source: '' if root.item is None else '../res/screens/equip/' + root.item.get_type() + 'Attack_black.png'
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deteqs.timg s_h')
        pos_hint: app.get_dkey('deteqs.timg p_h')
    ImageBase:
        id: element
        source: '' if root.item is None else '../res/screens/attribute/' + root.item.get_element() + '.png'
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deteqs.eimg s_h')
        pos_hint: app.get_dkey('deteqs.eimg p_h')
    ImageBase:
        id: rank
        source: '' if root.item is None else '../res/screens/stats/' + root.item.get_rank() + '.png'
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deteqs.rimg s_h')
        pos_hint: app.get_dkey('deteqs.rimg p_h')
        allow_stretch: True
    ImageBase:
        id: background_slot
        source: root.slot_source
        size_hint: app.get_dkey('deteqs.sltbg s_h')
        pos_hint: app.get_dkey('deteqs.sltbg p_h')
        allow_stretch: True
        keep_ratio: False
    HTButton:
        id: detail_equip
        collide_image: '../res/screens/buttons/equipment.collision.png'
        size_hint: app.get_dkey('deteqs.butt s_h')
        pos_hint: app.get_dkey('deteqs.butt p_h')
        opacity: 0
        on_release: print('touched' + root.slot_name)
    LabelBase:
        text: 'Not Equipped' if root.item is None else str(root.item.get_name()).capitalize()
        font_name: '../res/fnt/Gabriola.ttf'
        font_size: app.get_dkey('deteqs.lble fs', root.height)
        color: app.get_dkey('deteqs.lble c')
        size_hint: app.get_dkey('deteqs.lble.one s_h') if root.item is None else app.get_dkey('deteqs.lble.two s_h')
        pos_hint: app.get_dkey('deteqs.lble.one p_h') if root.item is None else app.get_dkey('deteqs.lble.two p_h')
    ImageBase:
        source: '../res/items/equipment/empty.png' if root.item is None else '../res/items/equipment/' + root.item.get_id() + '.png'
        source: '../res/items/equipment/empty.png' if root.item is None else '../res/items/equipment/' + root.item.get_id() + '.png'
        opacity: 0 if root.item is None else 1
        size_hint: app.get_dkey('deteqs.imge s_h')
        pos_hint: app.get_dkey('deteqs.imge p_h')
    LabelBase:
        text: 'Durability:  0/0\nScore:           0\nValue:          0' if root.item is None else 'Durability:  ' + str(root.item.get_durability_current()) + '/' + str(root.item.get_durability()) + '\nScore:           ' + str(root.item.get_score()) + '\nValue:          ' + str(root.item.get_value())
        halign: 'left'
        valign: 'top'
        font_name: '../res/fnt/Gabriola.ttf'
        font_size: app.get_dkey('deteqs.lbls fs', root.height)
        color: app.get_dkey('deteqs.lbls c')
        size_hint: None, None
        size: self.texture_size
        pos_hint: app.get_dkey('deteqs.lbls p_h')
    ScrollViewBase:
        do_scroll_x: False
        do_scroll_y: True
        size_hint: app.get_dkey('deteqs.lbg s_h')
        pos_hint: app.get_dkey('deteqs.lbg p_h')
        GridLayoutBase:
            cols: 2
            size_hint_y: None
            orientation: 'vertical'
            height: self.minimum_height
            ImageBase:
                id: patk
                source: '../res/screens/equip/PhysicalAttack_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_phyatk())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: matk
                source: '../res/screens/equip/MagicalAttack_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_magatk())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: def
                source: '../res/screens/equip/Defense_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_defense())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: health
                source: '../res/screens/equip/Health_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_health())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: mana
                source: '../res/screens/equip/Mana_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_mana())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: strength
                source: '../res/screens/equip/Str_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_strength())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: magic
                source: '../res/screens/equip/Mag_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_magic())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: endurance
                source: '../res/screens/equip/End_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_endurance())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: dexerity
                source: '../res/screens/equip/Dex_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_dexterity())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
            ImageBase:
                id: agility
                source: '../res/screens/equip/Agi_black.png'
                size_hint: app.get_dkey('deteqs.lstimg s_h')
                height: app.get_dkey('deteqs.lstimg h', root.height)
            LabelBase:
                text: '0' if root.item is None else str(root.item.get_agility())
                color: app.get_dkey('deteqs.lstimg c')
                font_name: '../res/fnt/Gabriola.ttf'
    ImageBase:
        source: root.list_source
        size_hint: app.get_dkey('deteqs.lbg s_h')
        pos_hint: app.get_dkey('deteqs.lbg p_h')
        allow_stretch: True
        keep_ratio: False

<MultiEquipmentChange>
    cols: 1
    rows: 10
    spacing: [0, ((self.height / 9) - (self.width * 50 / 200)) * 9 / 8]
    opacity: 0 if self.char is None else 1
    DisplayEquipmentSlot:
        id: weapon
        slot_name: "weapon"
        item: None if root.char is None else root.char.get_equipment().weapon
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: necklace
        item: None if root.char is None else root.char.get_equipment().necklace
        slot_name: 'necklace'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: ring
        item: None if root.char is None else root.char.get_equipment().ring
        slot_name: 'ring'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: helmet
        item: None if root.char is None else root.char.get_equipment().helmet
        slot_name: 'helmet'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: vambraces
        item: None if root.char is None else root.char.get_equipment().vambraces
        slot_name: 'vambraces'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: gloves
        item: None if root.char is None else root.char.get_equipment().gloves
        slot_name: 'gloves'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: chest
        item: None if root.char is None else root.char.get_equipment().chest
        slot_name: 'chest'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: grieves
        item: None if root.char is None else root.char.get_equipment().grieves
        slot_name: 'grieves'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')
    DisplayEquipmentSlot:
        id: boots
        item: None if root.char is None else root.char.get_equipment().boots
        slot_name: 'boots'
        font: '../res/fnt/Gabriola.ttf'
        color: app.get_dkey('cas.el c')

<GearChange>:
    name: 'gear_change'
    animation_start_down: self.height * 0.069
    animation_start_up: self.height * 0.825
    animate_distance: self.height * 0.044
    CarouselBase:
        id: carousel
        direction: 'bottom'
        RelativeLayoutBase:
            GridLayoutBase:
                cols: 8
                size_hint: 1, 0.225
                pos_hint: {'center_x': 0.5, 'top': 1}
                padding: [root.height * 0.025, root.height * 0.025, root.height * 0.025, 0]
                spacing: root.height * 0.0125
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][0]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][1]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][2]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][3]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][4]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][5]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][6]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][7]
            GridLayoutBase:
                cols: 8
                padding: [root.height * 0.025, root.height * 0.0125, root.height * 0.025, 0]
                spacing: root.height * 0.0125
                size_hint: 1, 0.60
                pos_hint: {'center_x': 0.5, 'top': 0.775}
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][0]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][1]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][2]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][3]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][4]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][5]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][6]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][7]
            GridLayoutBase:
                cols: 8
                padding: [root.height * 0.025, root.height * 0.025, root.height * 0.025, 0]
                spacing: root.height * 0.0125
                size_hint: 1, 0.8125
                pos_hint: {'center_x': 0.5, 'top': 1}
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][0] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][1] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][2] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][3] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][4] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][5] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][6] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][7] is None else 0
            HTButton:
                id: back_button_1
                path: '../res/screens/buttons/back_vflipped'
                size_hint: app.get_dkey('bb s_h')
                pos_hint: {'x': 0, 'y': 0}
                on_release: root.on_back_press()
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Auto Equip'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.167, 'center_y': 0.0875}
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Presets'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.333, 'center_y': 0.0875}
            HTButton:
                id: arrow_down
                path: '../res/screens/buttons/ArrowDown'
                size_hint: 0.1, 0.106
                pos_hint: {'center_x': 0.5}
                y: root.animation_start_down
                on_release: carousel.load_next()
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Inventory'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.667, 'center_y': 0.0875}
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Crafting'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.833, 'center_y': 0.0875}
        RelativeLayoutBase:
            HTButton:
                id: back_button_2
                path: '../res/screens/buttons/back'
                size_hint: app.get_dkey('bb s_h')
                pos_hint: app.get_dkey('bb p_h')
                on_release: root.on_back_press()
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Auto Equip'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.167, 'center_y': 0.9125}
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Presets'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.333, 'center_y': 0.9125}
            HTButton:
                id: arrow_up
                path: '../res/screens/buttons/ArrowUp'
                size_hint: 0.1, 0.106
                pos_hint: {'center_x': 0.5}
                y: root.animation_start_up
                on_release: carousel.load_previous()
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Inventory'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.667, 'center_y': 0.9125}
            HTButton:
                path: '../res/screens/buttons/long_stat'
                text: 'Crafting'
                size_hint: 0.15, 0.104
                font_name: '../res/fnt/Gabriola.ttf'
                label_color: 0, 0, 0, 1
                font_size: self.height * 0.45
                pos_hint: {'center_x': 0.833, 'center_y': 0.9125}
            GridLayoutBase:
                cols: 8
                size_hint: 1, 0.225
                pos_hint: {'center_x': 0.5, 'y': 0.6}
                padding: [root.height * 0.025, 0, root.height * 0.025, root.height * 0.0125]
                spacing: root.height * 0.0125
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 0]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 1]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 2]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 3]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 4]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 5]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 6]
                CharEquipButton:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 7]
            GridLayoutBase:
                cols: 8
                padding: [root.height * 0.025, 0, root.height * 0.025, root.height * 0.025]
                spacing: root.height * 0.0125
                size_hint: 1, 0.6
                pos_hint: {'center_x': 0.5, 'y': 0}
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 0]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 1]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 2]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 3]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 4]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 5]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 6]
                MultiEquipmentChange:
                    char: app.main.parties[app.main.parties[0] + 1][8 + 7]
            GridLayoutBase:
                cols: 8
                padding: [root.height * 0.025, 0, root.height * 0.025, root.height * 0.025]
                spacing: root.height * 0.0125
                size_hint: 1, 0.8125
                pos_hint: {'center_x': 0.5, 'y': 0.0125}
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 0] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 1] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 2] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 3] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 4] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 5] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 6] is None else 0
                MissingEquip:
                    opacity: 1 if app.main.parties[app.main.parties[0] + 1][8 + 7] is None else 0

<MissingEquip>:
    ImageBase:
        source: '../res/screens/equip/missing.png'
        allow_stretch: True
        keep_ratio: False
    LabelBase:
        text: "No Character Equipped"
        font_name: '../res/fnt/Gabriola.ttf'
        color: 0, 0, 0, 1
        font_size: root.width * 0.25
        canvas.before:
            PushMatrix
            Rotate:
                angle: -90
                origin: self.center
        canvas.after:
            PopMatrix

<CharEquipButton>:
    opacity: 0 if self.char is None else 1
    ImageBase:
        id: char_preview
        source: '' if root.char is None else root.char.preview_image_source
        size_hint: 0.98, 0.98
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    ImageBase:
        source: '../res/screens/equip/preview_background.png'
        allow_stretch: True
        keep_ratio: False
    HTButton:
        on_release: root.on_char_equip()
        opacity: 0
        collide_image: '../res/screens/buttons/default.collision.png'

















<Dungeonbattle>:
    name: 'dungeon_battle'
    id: dungeonscreen
    level_label: lvllabel
    turn_label: turnlabel
    encounter_label: encounterlabel
    Label:
        id: lvllabel
        font_size: 120
        color: 1,1,1,1
        size: self.texture_size
        pos: .5, .5
    Label:
        id: encounterlabel
        font_size: 120
        color: 1,1,1,1
        size: self.texture_size
        size_hint_y: None
        pos: .5, 500

    Label:
        id: turnlabel
        font_size: 120
        color: .8,.8,.8,1
        size: self.texture_size
        size_hint: None, None
        pos: 1180, 1240
<CharPreview>
    moveBar: move_bar
    moveBox: move_box
    Button:
        id: move_box
        size: 200, 75
        pos: self.parent.pos[0], self.parent.pos[1] + 200
        size_hint: None, None
        text: '%s' % root.move1name
        font_size: 30
        color: 0,0,0,1
        on_release: move_bar.hide_widget()
        background_color: 1,1,1,0
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Mesh:
                mode: 'triangle_fan'
                vertices: [self.pos[0] + 0, self.pos[1] + 37.25,0,0, self.pos[0] + 25,self.pos[1] + 69.5,0,0, self.pos[0] + 175,self.pos[1] + 69.5, 0, 0, self.pos[0] + 200, self.pos[1] + 37.25,0,0, self.pos[0] + 175, self.pos[1] + 5,0,0, self.pos[0] + 25, self.pos[1] + 5,0,0]
                indices: [0,1,2,3,4,5]
        MoveBarObject:
            id: move_bar
            pos: 200, self.parent.pos[1] + self.parent.height - 5
            Button:
                id: button0
                pos: 200, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 0)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move1name
                font_size: 30
            Button:
                id: button1
                pos: 200 + 175, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 1)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move2name
                font_size: 30
            Button:
                id: button2
                pos: 200 + 175*2, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 2)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move3name
                font_size: 30
            Button:
                id: button3
                pos: 200 + 175*3, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 3)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move4name
                font_size: 30
            Button:
                id: button4
                pos: 200 + 175*4, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 4)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.specialname
                font_size: 30



