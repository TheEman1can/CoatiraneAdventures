#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import random random
#:import Gradient Mainn.Gradient
MyScreenManager:
    manager: self
    transition: FadeTransition(duration=0.15)
    NewGameScreen:

<CharacterPreview>:
    size_hint: None, None
    size: 250, 650
    canvas:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size
<scrollcharacterpreview>:
    id: select
    size_hint: None, None
    size: 250, 650
    ScrollView:
        do_scroll_y: False
        size: self.parent.size
        size_hint: None, None
        BoxLayout:
            size_hint: None, None

<StatLabel>:
    size: self.texture_size
<emptycharacterpreview>:
    size_hint: None, None
    size: 250, 650
<filledcharacterpreviewS>:
    size_hint: None, None
    size: 250, 650
<filledcharacterPreview>:
    size_hint: None, None
    size: 250, 650
    background_normal: ''
    background_down: ''
    background_color: 0,0,0,0
    Image:
        id: image
        pos: self.parent.pos
        size: self.parent.size
        allow_stretch: True
        keep_ratio: True
        size_hint: None, None
        canvas:
            Color:
                rgba: 1,1,1,.65
            Rectangle:
                size: self.width, self.height/4
                pos: self.parent.pos[0], 0
            Rectangle:
                size: self.width, self.height/10
                pos: self.parent.pos[0], self.height-self.height/10

    Label:
        id: physicalattack
        size: self.texture_size
        pos: self.parent.pos[0] + 10, self.parent.pos[1] + 120
        color: 0,0,0,1
    Label:
        id: magicalattack
        size: self.texture_size
        pos: self.parent.pos[0] + 10, self.parent.pos[1] + 90
        color: 0,0,0,1
    Label:
        id: defense
        size: self.texture_size
        pos: self.parent.pos[0] + 10, self.parent.pos[1] + 60
        color: 0,0,0,1
    Label:
        id: magicalpoints
        size: self.texture_size
        pos: self.parent.pos[0] + 10, self.parent.pos[1] + 30
        color: 0,0,0,1
    Label:
        id: health
        size: self.texture_size
        pos: self.parent.pos[0] + 10, self.parent.pos[1]
        color: 0,0,0,1
    Label:
        id: strength
        size: self.texture_size
        pos: self.parent.pos[0] + self.parent.width - self.width - 10, self.parent.pos[1] + 120
        color: 0,0,0,1
    Label:
        id: magic
        size: self.texture_size
        pos: self.parent.pos[0] + self.parent.width - self.width - 10, self.parent.pos[1] + 90
        color: 0,0,0,1
    Label:
        id: endurance
        size: self.texture_size
        pos: self.parent.pos[0] + self.parent.width - self.width - 10, self.parent.pos[1] + 60
        color: 0,0,0,1
    Label:
        id: dexterity
        size: self.texture_size
        pos: self.parent.pos[0] + self.parent.width - self.width - 10, self.parent.pos[1] + 30
        color: 0,0,0,1
    Label:
        id: agility
        size: self.texture_size
        pos: self.parent.pos[0] + self.parent.width - self.width - 10, self.parent.pos[1]
        color: 0,0,0,1
    Label:
        id: level
        size: self.texture_size
        pos: self.parent.pos[0] + 20, self.parent.height - self.size[1]
        color: 0,0,0,1


<CharacterAttributeScreen>
    name: 'character_attribute_screen'
    Image:
        source: 'res/charattributebg.png'
        size: 2560, 960
        pos: 0,0
        allow_stretch: True
        keep_ratio: False
    Button:
        id: back
        size_hint: None, None
        background_normal: ''
        background_down: ''
        background_color: 0,0,0,0
        color: 0,0,0,0
        size: (100, 100)
        pos: (100, self.parent.height - 200)
        on_release: app.root.goto_previous()
<NewGameScreen>:
    name: 'new_game'
    FloatLayout:
        canvas:
            Rectangle
                size: self.size
                pos: self.pos
                texture: Gradient.diagonal((.15, .15, .15, 1), (.33, .05, .05, 1), (.25, 0, 0, 1))
        Label:
            size_hint: None, None
            text: 'Coatirane'
            font_size: 200
            color: 1,1,1,1
            size: self.texture_size
            center: 0.15 * root.center[0], root.center[1] * 1.5

        Label:
            size_hint: None, None
            text: 'Adventures'
            font_size: 200
            color: 1,1,1,1
            size: self.texture_size

            center: 0.35 * root.center[0], root.center[1] * 1.1

        Widget:
            name: 'new_bg'
            size_hint: None, None
            size: 750, 350
            pos: (root.width - self.width) * .20, root.height * .15
            canvas:
                Color:
                    rgba: 0.1,0.1,0.1,1
                Rectangle:
                    pos: self.pos
                    size: self.size
        Button:
            size_hint: None, None
            size: 734, 334
            pos: (root.width - self.width) * .20 + 6, root.height * .15 + 8
            background_normal:''
            background_color: 0,0,0,1
            text: 'New Game'
            font_size: 70
            color: 1,1,1,1
            on_release: app.root.setScreen('new_game', 'select_screen')
            canvas.after:
                Color:
                    rgba: 1,0,0,0.3
                Rectangle:
                    pos: self.pos
                    size: self.size
                    texture: Gradient.diagonal((0,0,0,1), (1,1,1,1))
        Widget:
            name: 'load_bg'
            size_hint: None, None
            size: 750, 350
            pos: (root.width - self.width) * .80, root.height * .15
            canvas:
                Color:
                    rgba: 0.1,0.1,0.1,1
                Rectangle:
                    pos: self.pos
                    size: self.size

        Button:
            size_hint: None, None
            size: 734, 334
            pos: (root.width - self.width) * .80 - 6, root.height * .15 + 8
            background_normal:''
            background_color: 0,0,0,1
            text: 'Load Game'
            font_size: 70
            color: 1,1,1,1
            #on_release: app.root.current = 'town_screen'
<SelectScreen>:
    name: 'select_screen'
    FloatLayout:
        Label:
            size_hint: None, None
            text: 'Select a character'
            font_size: 150
            color: 0.65, 0, 0, 1  
            center: root.width/2, root.top * 5 / 6
            size: self.texture_size
        Button:
            size_hint: None, None
            size: 500, 650
            pos: root.width*2/15, root.top*2/8
            foreground_normal: ''
            foreground_color: 1,0,0,0
            on_release: 
                root.chooseCharacter("Bell")
                app.root.setScreen('select_screen', 'town_screen')
        Button:
            size_hint: None, None
            size: 500, 650
            pos: root.width*39/60, root.top*2/8
            foreground_normal: ''
            foreground_color: 1,0,0,0
            on_release: 
                root.chooseCharacter("Ais")
                app.root.setScreen('select_screen', 'town_screen')
        Label:
            size_hint: None, None
            text: 'Battle Princess'
            font_size: 75
            color: 0.15,0.45,.75,1
            center: root.width*3/4, root.top/5
            size: self.texture_size    
        Label:
            size_hint: None, None
            text: 'Beast Slayer'
            font_size: 75
            color: 0.75,0,0,1
            center: root.width*3/13, root.top/5
            size: self.texture_size
        Widget:
            canvas:
                Color:
                    rgba: 1,0,0,0.45
                Rectangle:
                    size: 500, 650
                    pos: root.width*2/15, root.top*2/8
        Widget:
            canvas:
                Color:
                    rgba: 0.15,0.45,0.75,0.45
                Rectangle:
                    size: 500, 650
                    pos: root.width*39/60, root.top*2/8
        Image:
            size_hint: None, None
            source: 'res/Battle_Princess_Ais_Wallenstein.png'
            allow_stretch: True
            keep_ratio: True
            size: 500, 650
            pos: root.width*39/60, root.top*2/8
        Image:
            size_hint: None, None
            source: 'res/Adventurer_Bell_Cranel.png'
            allow_stretch: True
            keep_ratio: True
            size: 500, 650
            pos: root.width*2/15, root.top*2/8
<TownScreen>
    name: 'town_screen'
    Image:
        source: 'res/town.jpg'
        allow_stretch: True
        keep_ratio: True
        size: root.width, root.height
        size_hint: None, None
        pos: 0,0
        canvas:
            Color:
                rgba: 0,0,0,1
            #pub 1,3,5
            Mesh:
                mode: 'triangle_fan'
                vertices: [48, 48, 0, 0, 48, 48*4, 0, 0, 3*48, 48*6, 0, 0, 5*48, 4*48, 0, 0, 5*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #shop 6,8,10
            Mesh:
                mode: 'triangle_fan'
                vertices: [48*6, 48, 0, 0, 6*48, 48*4, 0, 0, 8*48, 48*6, 0, 0, 10*48, 4*48, 0, 0, 10*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #character draw 11,13,15
            Mesh:
                mode: 'triangle_fan'
                vertices: [48*11, 48, 0, 0, 11*48, 48*4, 0, 0, 13*48, 48*6, 0, 0, 15*48, 4*48, 0, 0, 15*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #blacksmith 16,18,20
            Mesh:
                mode: 'triangle_fan'
                vertices: [48*16, 48, 0, 0, 16*48, 48*4, 0, 0, 18*48, 48*6, 0, 0, 20*48, 4*48, 0, 0, 20*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #party screen 21,23,25
            Mesh:
                mode: 'triangle_fan'
                vertices: [48*21, 48, 0, 0, 21*48, 48*4, 0, 0, 23*48, 48*6, 0, 0, 25*48, 4*48, 0, 0, 25*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #quests 26,28,30
            Mesh:
                mode: 'triangle_fan'
                vertices: [48*26, 48, 0, 0, 26*48, 48*4, 0, 0, 28*48, 48*6, 0, 0, 30*48, 4*48, 0, 0, 30*48, 48, 0, 0]
                indices: [0,1,2,3,4]
            #dungeon X - 18, 20, 22 Y - 48, 96, 192, 288, 336
            Mesh:
                mode: 'triangle_fan'
                vertices: [96*18, 192, 0, 0, 96*18+48, 288, 0, 0, 96*20 - 48, 288, 0, 0, 96*20, 336, 0, 0, 96*20 + 48, 288, 0, 0, 96*22 - 48, 288, 0, 0,96*22, 192, 0, 0,96*22 - 48, 96, 0, 0,96*20 + 48, 96, 0, 0,96*20, 48, 0, 0,96*20 - 48, 96, 0, 0,96*18 + 48, 96, 0, 0]
                indices: [0,1,2,3,4,5,6,7,8,9,10,11]
    #pub
    Image:
        source: 'res/mug.png'
        allow_stretch: True
        keep_ratio: True
        size: 48 * 2, 48 * 2
        size_hint: None, None
        pos: 48 * 2 + 48/6, 48 * 2 + 24
    Label:
        size_hint: None, None
        text: 'Tavern'
        font_size: 40
        color: 1,1,1,1
        size: self.texture_size
        pos: 12 * 7, 12*5
    
    #Dugeon
    Image:
        source:'res/dungeon.png'
        allow_stretch: True
        keep_ratio: True
        size: 48*2, 48*2
        size_hint: None, None
        pos: 96*20 - 48, 48 * 3 + 24
    Label:
        size_hint: None, None
        text: 'Dungeon'
        size: self.texture_size
        font_size: 70
        color: 1,1,1,1
        center: 96*19 -48, 48 * 2
    Button:
        size_hint: None, None
        size: 48 * 8, 48 * 4
        pos: 96 *18, 48*2
        background_normal: ''
        background_color: 0,0,1,0
        color: 0,0,0,0
        on_release: 
            app.root.setScreen('town_screen', 'dungeon_main')
            # app.root.current_screen.ids['first_preview'].current = 'show'



<DungeonMain>
    name: 'dungeon_main'
    id: dungeon_main
    on_enter:
        self.showcurrentparty()
    FloatLayout:
        id: float

        Button:
            id: back
            size_hint: None, None
            background_normal: ''
            background_down: ''
            background_color: 0,0,0,0
            color: 0,0,0,0
            size: (100, 100)
            pos: (100, self.parent.height - 200)
            on_release: app.root.goto_previous()
            canvas:
                Color:
                    rgba: 1,1,1,1
                Mesh:
                    mode: 'triangle_fan'
                    vertices: [100, self.height-150,0,0, 150, self.height-100,0,0, 150, self.height-125,0,0, 200, self.height-125,0,0, 200, self.height-175,0,0, 150, self.height-175,0,0, 150, self.height-200,0,0]
                    indices: [0,1,1,2,3,4,5,6,0]
        Button:
            id: delve
            text: 'Delve'
            size_hint: None, None
            background_normal: ''
            background_color: 0,.55,.55,1
            color: 0,0,0,1
            font_size: 90
            size: (450, 175)
            on_release:
                print("Delve")
                root.delve()
            pos: (self.parent.width - self.width - 100 - 25, (self.parent.height - self.height)/2 - self.height - 75)
            canvas.before:
                Color:
                    rgba: 0,.55,.55,1
                Mesh:
                    mode: 'triangle_fan'
                    vertices: [self.pos[0] + 450, self.pos[1]+175/2,0,0,self.pos[0] + 475,self.pos[1] + 0,0,0,self.pos[0] -25,self.pos[1] + 0, 0, 0, self.pos[0], self.pos[1]+175/2,0,0,self.pos[0]-25, self.pos[1] + 175,0,0,self.pos[0] + 475, self.pos[1] + 175,0,0]
                    indices: [0,1,2,3,4,5]

        Button:
            id: ascend
            size_hint: None, None
            background_normal: ''
            background_disabled_normal: self.background_normal
            on_release:
                print("Ascend")
                root.ascend()
            background_color: 0.45,0,.55,1
            size: (450, 175)
            pos: (self.parent.width - self.width - 100 - 25, (self.parent.height - self.height)/2)
            canvas.before:
                Color:
                    rgba: 0.45, 0, .55, 1
                Mesh:
                    mode: 'triangle_fan'
                    vertices: [self.pos[0] + 450, self.pos[1]+175/2,0,0,self.pos[0] + 475,self.pos[1] + 0,0,0,self.pos[0] -25,self.pos[1] + 0, 0, 0, self.pos[0], self.pos[1]+175/2,0,0,self.pos[0]-25, self.pos[1] + 175,0,0,self.pos[0] + 475, self.pos[1] + 175,0,0]
                    indices: [0,1,2,3,4,5]
            Label:
                id: ascend_text
                text: 'Ascend'
                color: 0,0,0,1
                font_size: 90
                disabled_color: 0,0,0,1
                size_hint: None, None
                size: self.texture_size
                pos: self.parent.pos[0] + 75, self.parent.pos[1] + 35
                markup: True



        Label:
            size: self.texture_size
            size_hint: None, None
            text: 'Coatirane Dungeons'
            color: 0.65, 0.15, 0.25, 1
            font_size: 150
            pos: 96*3, root.height - 48 * 5
        Label:
            id: score
            size: self.texture_size
            size_hint: None, None
            text: 'Party Score: %d' % root.score
            color: 0.25, 0.20, 0.65, 1
            font_size: 100
            pos: self.parent.width - self.width - 150, self.parent.height - self.height - 250
        Label:
            id: level
            size: self.texture_size
            size_hint: None, None
            text: 'Level: %d %s' % (root.level, root.boss)
            color: 0.65, 0.10, 0.35, 1
            font_size: 90
            pos: 96*6, root.height - 48 * 7
<Dungeonbattle>
    name: 'dungeon_battle'
    id: dungeonscreen
    screen: dungeonscreen
    level_label: lvllabel
    main_layout: layout
    enemy_layout: enemyBracket
    character_layout: characterBracket

    FloatLayout:
        id: layout
        FloatLayout:
            id: characterBracket #implement later
        FloatLayout:
            id: enemyBracket
        Label:
            id: lvllabel
            font_size: 90
            color: 1,1,1,1
            pos: self.parent.pos[0]/2, self.parent.pos[1]/2
        Button:
            size_hint: None, None
            text: 'Attack'
            font_size: 120
            color: 1,1,1,1
            on_release: root.attack()
            background_normal: ''
            background_color: .5, .5, .5, 0
            size: self.texture_size
            pos: 1700, 100
        Label:
            id: turnlabel
            font_size: 90
            text: 'turn %d' % root.currentTurn
            color: .5,.5,.5,1
            pos: 1300, 100
            size: self.texture_size
            size_hint: None, None
<MoveBarObject>
<CharPreview>
    size: 200, 200
    size_hint: None, None
    allow_sretch: False
    keep_ratio: True
    moveBar: move_bar
    moveBox: move_box
    canvas:
        Color:
            rgba: 1,1,1,.3 # .3
        Rectangle:
            pos: self.pos
            size: self.width, self.height/4
    Label:
        text: '[b]HP[/b]'
        font_size: 24
        markup: True
        pos: self.parent.pos[0]+10,self.parent.pos[1]
        size: self.texture_size
        color: 1,1,1,1
    ProgressBar:
        max: root.healthmax
        value: root.health
        size: 90, 10
        pos: self.parent.pos[0] + 5, self.parent.pos[1] + 30
        canvas:
            Color:
                rgba: 1,0,1,0
            Rectangle:
                size: self.size
                pos: self.pos
    Label:
        text: '[b]MP[/b]'
        font_size: 24
        markup: True
        pos: self.parent.pos[0]+110,self.parent.pos[1]
        size: self.texture_size
        color: 1,1,1,1
    ProgressBar:
        max: root.mpmax
        value: root.mp
        size: 90, 10
        pos: self.parent.pos[0] + 105, self.parent.pos[1] + 30
        canvas:
            Color:
                rgba: 1,1,0,0
            Rectangle:
                size: self.size
                pos: self.pos
    Button:
        id: move_box
        size: 200, 75
        pos: self.parent.pos[0], self.parent.pos[1] + 200
        size_hint: None, None
        text: '%s' % root.move1
        font_size: 30
        color: 0,0,0,1
        on_release: move_bar.hide_widget()
        background_color: 1,1,1,0
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Mesh:
                mode: 'triangle_fan'
                vertices: [self.pos[0] + 0, self.pos[1] + 37.25,0,0, self.pos[0] + 25,self.pos[1] + 69.5,0,0, self.pos[0] + 175,self.pos[1] + 69.5, 0, 0, self.pos[0] + 200, self.pos[1] + 37.25,0,0, self.pos[0] + 175, self.pos[1] + 5,0,0, self.pos[0] + 25, self.pos[1] + 5,0,0]
                indices: [0,1,2,3,4,5]
        MoveBarObject:
            id: move_bar
            pos: 200, self.parent.pos[1] + self.parent.height - 5
            Button:
                id: button0
                pos: 200, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 0)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move1
                font_size: 30
            Button:
                id: button1
                pos: 200 + 175, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 1)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move2
                font_size: 30
            Button:
                id: button2
                pos: 200 + 175*2, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 2)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move3
                font_size: 30
            Button:
                id: button3
                pos: 200 + 175*3, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 3)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.move4
                font_size: 30
            Button:
                id: button4
                pos: 200 + 175*4, self.parent.pos[1]
                on_release: self.parent.callback(self.text, 4)
                size: self.parent.size[0] / 5, self.parent.size[1]
                size_hint: None, None
                color: 0,0,0,1
                background_color: 0,0,0,0
                text: '%s' % root.special
                font_size: 30


<MoveBarObject>:
    background_color: 1,1,1,1
    color: 1,1,1,1
    #AtkBtn1: _button0
    #AtkBtn2: _button1
    #AtkBtn3: _button2
    #AtkBtn4: _button3
    #AtkBtn5: _button4
    size_hint: None, None
    canvas:
        Color:
            rgba: .8,.8,.8,1
        Rectangle:
            size: self.size
            pos: self.pos


<PreSeen>     
<CharacterS>
<Empty>